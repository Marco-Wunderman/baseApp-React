import * as React from 'react';
import * as ReactDOM from 'react-dom';
import { ExternalLink } from '@volkswagen-onehub/icons-core';
import { styled } from '../theme-provider';
const StyledExternalLinkIndicator = styled(ExternalLink).withConfig({ displayName: "StyledExternalLinkIndicator", componentId: "sc-1wpzb1v" }) `
	border: 0;
	width: 0.85em;
	height: 0.7em;

	${props => props.direction === 'rtl' && `transform: scale(-1, 1);`}
`;
export class ExternalLinkIndicator extends React.PureComponent {
    constructor(props) {
        super(props);
        this.ref = React.createRef();
        this.state = {
            direction: 'ltr'
        };
    }
    componentDidMount() {
        const direction = this.ref &&
            this.ref.current &&
            window &&
            // We need to use findDOMNode to ensure that we also get the
            // element from the reference in styled-components version v3.x.x.
            // After discontinuing the support for styled-components v3 we can remove
            // the `findDOMNode` and directly access the reference again.
            // eslint-disable-next-line react/no-find-dom-node
            window.getComputedStyle(ReactDOM.findDOMNode(this.ref.current)).direction;
        if (direction === 'ltr' || direction === 'rtl') {
            this.setState({ direction });
        }
    }
    render() {
        const { direction } = this.state;
        return (React.createElement(StyledExternalLinkIndicator, { variant: "default", direction: direction, ref: this.ref }));
    }
}
