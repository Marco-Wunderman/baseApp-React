import * as React from 'react';
import { ChevronDown } from '@volkswagen-onehub/icons-core';
import { Container, ContainerGutter, ContainerPadding } from '../container';
import { DemoThemeProviderWithToggle } from '../demo';
import { DemoContainer } from '../demo/demo-container';
import { DemoRoot } from '../demo/demo-root';
import { Breakpoints } from '../helpers';
import { Layout } from '../layout';
import { Text, TextAppearance, TextColor } from '../text';
import { ThemeProvider } from '../theme-provider';
import { ActionButton, ActionButtonLink } from './index';
const sampleText = (React.createElement(Text, { color: TextColor.inherit, appearance: TextAppearance.copy100 }, "Filter"));
const sampleIcon = React.createElement(ChevronDown, { variant: "small" });
const threeColumnLayout = {
    [Breakpoints.default]: [
        { name: 'a', columns: 24 },
        { name: 'b', columns: 24 },
        { name: 'c', columns: 24 }
    ],
    [Breakpoints.tablet]: [
        { name: 'a', columns: 8 },
        { name: 'b', columns: 8 },
        { name: 'c', columns: 8 }
    ]
};
const ActionButtonDemo = () => (React.createElement(DemoRoot, null,
    React.createElement(DemoThemeProviderWithToggle, null,
        React.createElement(React.Fragment, null,
            React.createElement(Text, { appearance: TextAppearance.headline0350 }, "Action Button"),
            React.createElement(Text, { appearance: TextAppearance.headline0350 }, "\u00A0"),
            React.createElement(Text, { appearance: TextAppearance.headline0250, bold: true }, "Default"),
            React.createElement(Layout, { appearance: threeColumnLayout },
                React.createElement(DemoContainer, null,
                    React.createElement(Container, { gutter: ContainerGutter.static100, padding: ContainerPadding.static200, stretchContent: true },
                        React.createElement(Text, { appearance: TextAppearance.copy0200 }, "default"),
                        React.createElement(ActionButton, { icon: sampleIcon, onClick: () => {
                                window.alert('more');
                            } }, sampleText)),
                    React.createElement(Container, { gutter: ContainerGutter.static100, padding: ContainerPadding.static200, stretchContent: true },
                        React.createElement(Text, { appearance: TextAppearance.copy0200 }, "disabled"),
                        React.createElement(ActionButton, { icon: sampleIcon, disabled: true, onClick: () => {
                                window.alert('more');
                            } }, sampleText))),
                React.createElement(ThemeProvider, { theme: "inverted" },
                    React.createElement(DemoContainer, null,
                        React.createElement(Container, { gutter: ContainerGutter.static100, padding: ContainerPadding.static200, stretchContent: true },
                            React.createElement(Text, { appearance: TextAppearance.copy0200 }, "default"),
                            React.createElement(ActionButton, { icon: sampleIcon, onClick: () => {
                                    window.alert('more');
                                } }, sampleText)),
                        React.createElement(Container, { gutter: ContainerGutter.static100, padding: ContainerPadding.static200, stretchContent: true },
                            React.createElement(Text, { appearance: TextAppearance.copy0200 }, "disabled"),
                            React.createElement(ActionButton, { icon: sampleIcon, disabled: true, onClick: () => {
                                    window.alert('more');
                                } }, sampleText)))),
                React.createElement(ThemeProvider, { theme: "image" },
                    React.createElement(DemoContainer, { hasBackgroundImage: true },
                        React.createElement(Container, { gutter: ContainerGutter.static100, padding: ContainerPadding.static200, stretchContent: true },
                            React.createElement(Text, { appearance: TextAppearance.copy0200 }, "default"),
                            React.createElement(ActionButton, { icon: sampleIcon, onClick: () => {
                                    window.alert('more');
                                } }, sampleText)),
                        React.createElement(Container, { gutter: ContainerGutter.static100, padding: ContainerPadding.static200, stretchContent: true },
                            React.createElement(Text, { appearance: TextAppearance.copy0200 }, "disabled"),
                            React.createElement(ActionButton, { icon: sampleIcon, disabled: true, onClick: () => {
                                    window.alert('more');
                                } }, sampleText))))),
            React.createElement(Text, { appearance: TextAppearance.headline0250, bold: true }, "Reduced"),
            React.createElement(Layout, { appearance: threeColumnLayout },
                React.createElement(DemoContainer, null,
                    React.createElement(Container, { gutter: ContainerGutter.static100, padding: ContainerPadding.static200, stretchContent: true },
                        React.createElement(Text, { appearance: TextAppearance.copy0200 }, "default"),
                        React.createElement(ActionButton, { icon: sampleIcon, reduced: true, onClick: () => {
                                window.alert('more');
                            } }, sampleText)),
                    React.createElement(Container, { gutter: ContainerGutter.static100, padding: ContainerPadding.static200, stretchContent: true },
                        React.createElement(Text, { appearance: TextAppearance.copy0200 }, "disabled"),
                        React.createElement(ActionButton, { icon: sampleIcon, reduced: true, disabled: true, onClick: () => {
                                window.alert('more');
                            } }, sampleText))),
                React.createElement(ThemeProvider, { theme: "inverted" },
                    React.createElement(DemoContainer, null,
                        React.createElement(Container, { gutter: ContainerGutter.static100, padding: ContainerPadding.static200, stretchContent: true },
                            React.createElement(Text, { appearance: TextAppearance.copy0200 }, "default"),
                            React.createElement(ActionButton, { icon: sampleIcon, reduced: true, onClick: () => {
                                    window.alert('more');
                                } }, sampleText)),
                        React.createElement(Container, { gutter: ContainerGutter.static100, padding: ContainerPadding.static200, stretchContent: true },
                            React.createElement(Text, { appearance: TextAppearance.copy0200 }, "disabled"),
                            React.createElement(ActionButton, { icon: sampleIcon, reduced: true, disabled: true, onClick: () => {
                                    window.alert('more');
                                } }, sampleText)))),
                React.createElement(ThemeProvider, { theme: "image" },
                    React.createElement(DemoContainer, { hasBackgroundImage: true },
                        React.createElement(Container, { gutter: ContainerGutter.static100, padding: ContainerPadding.static200, stretchContent: true },
                            React.createElement(Text, { appearance: TextAppearance.copy0200 }, "default"),
                            React.createElement(ActionButton, { icon: sampleIcon, reduced: true, onClick: () => {
                                    window.alert('more');
                                } }, sampleText)),
                        React.createElement(Container, { gutter: ContainerGutter.static100, padding: ContainerPadding.static200, stretchContent: true },
                            React.createElement(Text, { appearance: TextAppearance.copy0200 }, "disabled"),
                            React.createElement(ActionButton, { icon: sampleIcon, reduced: true, disabled: true, onClick: () => {
                                    window.alert('more');
                                } }, sampleText))))),
            React.createElement(Text, { appearance: TextAppearance.headline0350 }, "Action Button Link"),
            React.createElement(Text, { appearance: TextAppearance.headline0350 }, "\u00A0"),
            React.createElement(Text, { appearance: TextAppearance.headline0250, bold: true }, "Default"),
            React.createElement(Layout, { appearance: threeColumnLayout },
                React.createElement(DemoContainer, null,
                    React.createElement(Container, { gutter: ContainerGutter.static100, padding: ContainerPadding.static200, stretchContent: true },
                        React.createElement(Text, { appearance: TextAppearance.copy0200 }, "default"),
                        React.createElement(ActionButtonLink, { href: "#", icon: sampleIcon, onClick: () => {
                                window.alert('more');
                            } }, sampleText)),
                    React.createElement(Container, { gutter: ContainerGutter.static100, padding: ContainerPadding.static200, stretchContent: true },
                        React.createElement(Text, { appearance: TextAppearance.copy0200 }, "disabled"),
                        React.createElement(ActionButtonLink, { href: "#", icon: sampleIcon, disabled: true, onClick: () => {
                                window.alert('more');
                            } }, sampleText))),
                React.createElement(ThemeProvider, { theme: "inverted" },
                    React.createElement(DemoContainer, null,
                        React.createElement(Container, { gutter: ContainerGutter.static100, padding: ContainerPadding.static200, stretchContent: true },
                            React.createElement(Text, { appearance: TextAppearance.copy0200 }, "default"),
                            React.createElement(ActionButtonLink, { href: "#", icon: sampleIcon, onClick: () => {
                                    window.alert('more');
                                } }, sampleText)),
                        React.createElement(Container, { gutter: ContainerGutter.static100, padding: ContainerPadding.static200, stretchContent: true },
                            React.createElement(Text, { appearance: TextAppearance.copy0200 }, "disabled"),
                            React.createElement(ActionButtonLink, { href: "#", icon: sampleIcon, disabled: true, onClick: () => {
                                    window.alert('more');
                                } }, sampleText)))),
                React.createElement(ThemeProvider, { theme: "image" },
                    React.createElement(DemoContainer, { hasBackgroundImage: true },
                        React.createElement(Container, { gutter: ContainerGutter.static100, padding: ContainerPadding.static200, stretchContent: true },
                            React.createElement(Text, { appearance: TextAppearance.copy0200 }, "default"),
                            React.createElement(ActionButtonLink, { href: "#", icon: sampleIcon, onClick: () => {
                                    window.alert('more');
                                } }, sampleText)),
                        React.createElement(Container, { gutter: ContainerGutter.static100, padding: ContainerPadding.static200, stretchContent: true },
                            React.createElement(Text, { appearance: TextAppearance.copy0200 }, "disabled"),
                            React.createElement(ActionButtonLink, { href: "#", icon: sampleIcon, disabled: true, onClick: () => {
                                    window.alert('more');
                                } }, sampleText))))),
            React.createElement(Text, { appearance: TextAppearance.headline0250, bold: true }, "Reduced"),
            React.createElement(Layout, { appearance: threeColumnLayout },
                React.createElement(DemoContainer, null,
                    React.createElement(Container, { gutter: ContainerGutter.static100, padding: ContainerPadding.static200, stretchContent: true },
                        React.createElement(Text, { appearance: TextAppearance.copy0200 }, "default"),
                        React.createElement(ActionButtonLink, { href: "#", icon: sampleIcon, reduced: true, onClick: () => {
                                window.alert('more');
                            } }, sampleText)),
                    React.createElement(Container, { gutter: ContainerGutter.static100, padding: ContainerPadding.static200, stretchContent: true },
                        React.createElement(Text, { appearance: TextAppearance.copy0200 }, "disabled"),
                        React.createElement(ActionButtonLink, { href: "#", icon: sampleIcon, reduced: true, disabled: true, onClick: () => {
                                window.alert('more');
                            } }, sampleText))),
                React.createElement(ThemeProvider, { theme: "inverted" },
                    React.createElement(DemoContainer, null,
                        React.createElement(Container, { gutter: ContainerGutter.static100, padding: ContainerPadding.static200, stretchContent: true },
                            React.createElement(Text, { appearance: TextAppearance.copy0200 }, "default"),
                            React.createElement(ActionButtonLink, { href: "#", icon: sampleIcon, reduced: true, onClick: () => {
                                    window.alert('more');
                                } }, sampleText)),
                        React.createElement(Container, { gutter: ContainerGutter.static100, padding: ContainerPadding.static200, stretchContent: true },
                            React.createElement(Text, { appearance: TextAppearance.copy0200 }, "disabled"),
                            React.createElement(ActionButtonLink, { href: "#", icon: sampleIcon, reduced: true, disabled: true, onClick: () => {
                                    window.alert('more');
                                } }, sampleText)))),
                React.createElement(ThemeProvider, { theme: "image" },
                    React.createElement(DemoContainer, { hasBackgroundImage: true },
                        React.createElement(Container, { gutter: ContainerGutter.static100, padding: ContainerPadding.static200, stretchContent: true },
                            React.createElement(Text, { appearance: TextAppearance.copy0200 }, "default"),
                            React.createElement(ActionButtonLink, { href: "#", icon: sampleIcon, reduced: true, onClick: () => {
                                    window.alert('more');
                                } }, sampleText)),
                        React.createElement(Container, { gutter: ContainerGutter.static100, padding: ContainerPadding.static200, stretchContent: true },
                            React.createElement(Text, { appearance: TextAppearance.copy0200 }, "disabled"),
                            React.createElement(ActionButtonLink, { href: "#", icon: sampleIcon, reduced: true, disabled: true, onClick: () => {
                                    window.alert('more');
                                } }, sampleText)))))))));
export default ActionButtonDemo;
