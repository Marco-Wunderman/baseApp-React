import * as React from 'react';
import { ReactScreenshotTest } from 'react-screenshot-test';
import { DemoRoot, DemoContainer } from '../../demo';
import { ThemeProvider } from '../../theme-provider';
import { Container, ContainerGutter, ContainerWrap, ContainerPadding, ContainerVerticalAlignment, ContainerHorizontalAlignment } from '../index';
import { DemoContent, demoContent, LargeDemoContent, demoContentWithSeparators } from '../demo';
import { Breakpoints } from '../../helpers';
import { BreakpointWrapper } from '../../breakpoint-wrapper';
ReactScreenshotTest.create('Button')
    .viewport('Desktop', {
    width: 1024,
    height: 768
})
    .viewport('Mobile', {
    width: 560,
    height: 812,
    isMobile: true,
    hasTouch: true
})
    .shoot('Single child', React.createElement(DemoRoot, null,
    React.createElement(ThemeProvider, null,
        React.createElement(DemoContainer, null,
            React.createElement(Container, null,
                React.createElement(DemoContent, { key: "first_div" }, "First div"))))))
    .shoot('Multiple children', React.createElement(DemoRoot, null,
    React.createElement(ThemeProvider, null,
        React.createElement(DemoContainer, null,
            React.createElement(Container, null, demoContent)))))
    .shoot('With Gutter', React.createElement(DemoRoot, null,
    React.createElement(ThemeProvider, null,
        React.createElement(DemoContainer, null,
            React.createElement(Container, { gutter: ContainerGutter.static100 }, demoContent)))))
    .shoot('With Gutter breakpoint configuration', React.createElement(DemoRoot, null,
    React.createElement(ThemeProvider, null,
        React.createElement(DemoContainer, null,
            React.createElement(Container, { gutter: {
                    [Breakpoints.default]: ContainerGutter.static100,
                    [Breakpoints.tablet]: ContainerGutter.static200,
                    [Breakpoints.desktop]: ContainerGutter.static300
                } }, demoContent)))))
    .shoot('Wrap never', React.createElement(DemoRoot, null,
    React.createElement(ThemeProvider, null,
        React.createElement(DemoContainer, null,
            React.createElement(Container, { gutter: ContainerGutter.static100, wrap: ContainerWrap.never }, demoContent)))))
    .shoot('Wrap always', React.createElement(DemoRoot, null,
    React.createElement(ThemeProvider, null,
        React.createElement(DemoContainer, null,
            React.createElement(Container, { gutter: ContainerGutter.static100, wrap: ContainerWrap.always }, demoContent)))))
    .shoot('Wrap as breakpoint configuration', React.createElement(DemoRoot, null,
    React.createElement(ThemeProvider, null,
        React.createElement(DemoContainer, null,
            React.createElement(Container, { gutter: ContainerGutter.static100, wrap: {
                    [Breakpoints.default]: ContainerWrap.always,
                    [Breakpoints.b960]: ContainerWrap.never
                } }, demoContent)))))
    .shoot('Stretch content', React.createElement(DemoRoot, null,
    React.createElement(ThemeProvider, null,
        React.createElement(DemoContainer, null,
            React.createElement(Container, { stretchContent: true }, demoContent)))))
    .shoot('With padding', React.createElement(DemoRoot, null,
    React.createElement(ThemeProvider, null,
        React.createElement(DemoContainer, null,
            React.createElement(Container, { gutter: ContainerGutter.static100, padding: ContainerPadding.static100 }, demoContent)))))
    .shoot('With different padding for all sides and based on breakpoints', React.createElement(DemoRoot, null,
    React.createElement(ThemeProvider, null,
        React.createElement(DemoContainer, null,
            React.createElement(Container, { gutter: ContainerGutter.static100, padding: {
                    top: ContainerPadding.static100,
                    left: {
                        [Breakpoints.b960]: ContainerPadding.grid001,
                        [Breakpoints.b1280]: ContainerPadding.grid002
                    }
                } }, demoContent)))))
    .shoot('children vertically centered', React.createElement(DemoRoot, null,
    React.createElement(ThemeProvider, null,
        React.createElement(DemoContainer, null,
            React.createElement(Container, { gutter: ContainerGutter.static100, verticalAlign: ContainerVerticalAlignment.center },
                React.createElement(DemoContent, null, "small content"),
                React.createElement(LargeDemoContent, null, "large content"))))))
    .shoot('children aligned to the bottom', React.createElement(DemoRoot, null,
    React.createElement(ThemeProvider, null,
        React.createElement(DemoContainer, null,
            React.createElement(Container, { gutter: ContainerGutter.static100, verticalAlign: ContainerVerticalAlignment.flexEnd },
                React.createElement(DemoContent, null, "small content"),
                React.createElement(LargeDemoContent, null, "large content"))))))
    .shoot('children horizontally centered', React.createElement(DemoRoot, null,
    React.createElement(ThemeProvider, null,
        React.createElement(DemoContainer, null,
            React.createElement(Container, { gutter: ContainerGutter.static100, horizontalAlign: ContainerHorizontalAlignment.center },
                React.createElement(DemoContent, null, "small content"))))))
    .shoot('children aligned to the right', React.createElement(DemoRoot, null,
    React.createElement(ThemeProvider, null,
        React.createElement(DemoContainer, null,
            React.createElement(Container, { gutter: ContainerGutter.static100, horizontalAlign: ContainerHorizontalAlignment.flexEnd },
                React.createElement(DemoContent, null, "small content"))))))
    .shoot('children aligned differently on various breakpoints', React.createElement(DemoRoot, null,
    React.createElement(ThemeProvider, null,
        React.createElement(DemoContainer, null,
            React.createElement(Container, { gutter: ContainerGutter.static100, horizontalAlign: {
                    [Breakpoints.default]: ContainerHorizontalAlignment.flexStart,
                    [Breakpoints.b560]: ContainerHorizontalAlignment.flexEnd,
                    [Breakpoints.b960]: ContainerHorizontalAlignment.flexStart,
                    [Breakpoints.b1280]: ContainerHorizontalAlignment.center
                } },
                React.createElement(DemoContent, null, "small content"))))))
    .shoot('Separators between children', React.createElement(DemoRoot, null,
    React.createElement(ThemeProvider, null,
        React.createElement(DemoContainer, null,
            React.createElement(Container, { gutter: ContainerGutter.static100, wrap: ContainerWrap.always }, demoContentWithSeparators)))))
    .shoot('With children that render `null`', React.createElement(DemoRoot, null,
    React.createElement(ThemeProvider, null,
        React.createElement(DemoContainer, null,
            React.createElement(Container, { gutter: ContainerGutter.static300 },
                React.createElement(BreakpointWrapper, { max: Breakpoints.b960 },
                    React.createElement(DemoContent, null, "I'm only visible below 960px, so there is no gutter for me in larger breakpoints")),
                demoContent)))))
    .run();
