import * as React from 'react';
import { DemoContainer } from '../demo/demo-container';
import { DemoRoot } from '../demo/demo-root';
import { DemoThemeProviderWithToggle } from '../demo/demo-theme-provider-with-toggle';
import { DecorativeImage, Image, LazyImage } from './index';
class ImageDemo extends React.Component {
    render() {
        return (React.createElement(DemoRoot, null,
            React.createElement("h2", null, "The Image Component"),
            React.createElement("p", null, "This is a demo for the image pattern. Here you can find all the different forms the image can assume."),
            React.createElement("hr", null),
            React.createElement(DemoThemeProviderWithToggle, null,
                React.createElement(DemoContainer, null,
                    React.createElement("h3", null, "Decorative Image with src-Attribute and empty alt-attribute"),
                    React.createElement(DecorativeImage, { src: "/api/static/component-files/generic/1024x768.png" })),
                React.createElement(DemoContainer, null,
                    React.createElement("h3", null, "Responsive Image with srcset- and sizes-Attribute"),
                    React.createElement(Image, { src: "/api/static/component-files/generic/1024x768.png", srcSet: "/api/static/component-files/generic/1440x768.png 1440w, /api/static/component-files/generic/320x372.png 768w", sizes: "(max-width: 768px) 320px, 1440px", alt: "Dummy" })),
                React.createElement(DemoContainer, null,
                    React.createElement("h3", null, "Lazyloading Image"),
                    React.createElement(LazyImage, { src: "/api/static/component-files/generic/1920x1080.png", alt: "Dummy" })),
                React.createElement(DemoContainer, null,
                    React.createElement("h3", null, "Image with reduced brightness"),
                    React.createElement(LazyImage, { src: "/api/static/component-files/generic/1920x1080.png", alt: "Dummy", reduceBrightness: true })))));
    }
}
export default ImageDemo;
