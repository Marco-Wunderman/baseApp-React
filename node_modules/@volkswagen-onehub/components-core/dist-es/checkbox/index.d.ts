import * as React from 'react';
export declare type HandleCheckboxEvent = (e: React.SyntheticEvent<HTMLInputElement>, props: CheckboxProps) => void;
export declare enum CheckboxAppearance {
    Error = 0
}
export interface CheckboxProps {
    readonly appearance?: CheckboxAppearance;
    readonly errorText?: string;
    readonly checked?: boolean;
    readonly defaultChecked?: boolean;
    readonly disabled?: boolean;
    readonly label?: string | JSX.Element;
    readonly name?: string;
    readonly onBlur?: HandleCheckboxEvent;
    readonly onChange?: HandleCheckboxEvent;
    readonly onClick?: HandleCheckboxEvent;
    readonly onFocus?: HandleCheckboxEvent;
    readonly required?: boolean;
    readonly tabIndex?: -1 | 0;
    readonly value: string;
}
export declare class Checkbox extends React.Component<CheckboxProps> {
    protected readonly handleChange: (e: React.SyntheticEvent<HTMLInputElement, Event>) => void;
    protected readonly handleBlur: (e: React.SyntheticEvent<HTMLInputElement, Event>) => void;
    protected readonly handleFocus: (e: React.SyntheticEvent<HTMLInputElement, Event>) => void;
    protected readonly handleClick: (e: React.SyntheticEvent<HTMLInputElement, Event>) => void;
    render(): JSX.Element;
}
