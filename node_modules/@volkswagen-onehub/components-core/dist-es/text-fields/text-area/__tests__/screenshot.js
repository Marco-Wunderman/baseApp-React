import * as React from 'react';
import { ReactScreenshotTest } from 'react-screenshot-test';
import { DemoContainer, DemoRoot } from '../../../demo';
import { ThemeProvider } from '../../../theme-provider';
import { TextArea } from '../index';
import { TextAreaAppearance } from '../../shared';
import blurred from '../../../../static/component-files/demo/blurred.png';
ReactScreenshotTest.create('Text area')
    .viewport('Desktop', {
    width: 1024,
    height: 768
})
    .shoot('Main: default style', React.createElement(DemoRoot, null,
    React.createElement(ThemeProvider, null,
        React.createElement(DemoContainer, null,
            React.createElement(TextArea, { appearance: TextAreaAppearance.Default, label: "Please tell us your opinion", placeholder: "Please tell us your opinion" })))))
    .shoot('Main: with floating label', React.createElement(DemoRoot, null,
    React.createElement(ThemeProvider, null,
        React.createElement(DemoContainer, null,
            React.createElement(TextArea, { appearance: TextAreaAppearance.Default, label: "Please tell us your opinion", isFloating: true })))))
    .shoot('Inverted: default style', React.createElement(DemoRoot, null,
    React.createElement(ThemeProvider, { theme: "inverted" },
        React.createElement(DemoContainer, null,
            React.createElement(TextArea, { appearance: TextAreaAppearance.Default, label: "Please tell us your opinion", placeholder: "Please tell us your opinion" })))))
    .shoot('Inverted: with floating label', React.createElement(DemoRoot, null,
    React.createElement(ThemeProvider, { theme: "inverted" },
        React.createElement(DemoContainer, null,
            React.createElement(TextArea, { appearance: TextAreaAppearance.Default, label: "Please tell us your opinion", isFloating: true })))))
    .shoot('Image: default style', React.createElement(DemoRoot, null,
    React.createElement(ThemeProvider, { theme: "image" },
        React.createElement(DemoContainer, { backgroundImage: blurred },
            React.createElement(TextArea, { appearance: TextAreaAppearance.Default, label: "Please tell us your opinion", placeholder: "Please tell us your opinion" })))))
    .shoot('Image: with floating label', React.createElement(DemoRoot, null,
    React.createElement(ThemeProvider, { theme: "image" },
        React.createElement(DemoContainer, { backgroundImage: blurred },
            React.createElement(TextArea, { appearance: TextAreaAppearance.Default, label: "Please tell us your opinion", isFloating: true })))))
    .shoot('Main: invalid style', React.createElement(DemoRoot, null,
    React.createElement(ThemeProvider, null,
        React.createElement(DemoContainer, null,
            React.createElement(TextArea, { appearance: TextAreaAppearance.Error, label: "Please tell us your opinion", value: "Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At v", onChange: () => { } })))))
    .shoot('Main: disabled style', React.createElement(DemoRoot, null,
    React.createElement(ThemeProvider, null,
        React.createElement(DemoContainer, null,
            React.createElement(TextArea, { appearance: TextAreaAppearance.Disabled, label: "Please tell us your opinion" })))))
    .shoot('Main: readonly style', React.createElement(DemoRoot, null,
    React.createElement(ThemeProvider, null,
        React.createElement(DemoContainer, null,
            React.createElement(TextArea, { appearance: TextAreaAppearance.ReadOnly, label: "Please tell us your opinion", value: "Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At v", onChange: () => { } })))))
    .shoot('Main: required style', React.createElement(DemoRoot, null,
    React.createElement(ThemeProvider, null,
        React.createElement(DemoContainer, null,
            React.createElement(TextArea, { appearance: TextAreaAppearance.Default, label: "Please tell us your opinion", placeholder: "Please tell us your opinion", value: "Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At ve", required: true, onChange: () => { } })))))
    .shoot('Main: with character counter', React.createElement(DemoRoot, null,
    React.createElement(ThemeProvider, null,
        React.createElement(DemoContainer, null,
            React.createElement(TextArea, { appearance: TextAreaAppearance.Default, label: "Please tell us your opinion", value: "Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At v", maxLength: 16, rows: 2, onChange: () => { } })))))
    .shoot('Main: with multiple rows', React.createElement(DemoRoot, null,
    React.createElement(ThemeProvider, null,
        React.createElement(DemoContainer, null,
            React.createElement(TextArea, { appearance: TextAreaAppearance.Default, label: "Please tell us your opinion", value: "Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At v\n\t\t\t\t\tLorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At v\n\t\t\t\t\tLorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At v\n\t\t\t\t\tLorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At v\n\t\t\t\t\tLorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At v", rows: 3, onChange: () => { } })))))
    .run();
