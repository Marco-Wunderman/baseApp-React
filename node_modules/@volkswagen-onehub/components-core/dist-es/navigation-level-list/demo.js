import * as React from 'react';
import { BreakpointWrapper } from '../breakpoint-wrapper';
import { DemoContainer } from '../demo/demo-container';
import { DemoRoot } from '../demo/demo-root';
import { DemoThemeProviderWithToggle } from '../demo/demo-theme-provider-with-toggle';
import { FixedWidthContainer } from '../fixed-width-container';
import { Breakpoints } from '../helpers';
import { Layout } from '../layout';
import { NavigationLevelList, NavigationLevelListItem } from './index';
const menuItems = [
    { name: 'Item One', url: '#' },
    {
        name: 'Item Two',
        children: [
            { name: 'Item Two - SubItem One', url: '#' },
            { name: 'Item Two - SubItem Two', url: '#' }
        ]
    },
    {
        name: 'Item Three',
        children: [
            { name: 'SubItem One', url: '#' },
            { name: 'Item Three - SubItem Two', url: '#' },
            { name: 'Item Three - SubItem Three', url: '#' }
        ]
    }
];
class MobileNavigationItemStateHolder extends React.PureComponent {
    constructor(props) {
        super(props);
        this.onClick = (e) => {
            e.preventDefault();
            this.setState(state => ({ isOpen: !state.isOpen }));
        };
        this.state = {
            isOpen: false
        };
    }
    render() {
        return this.props.children(this.state.isOpen, this.onClick);
    }
}
class NavigationLevelListDemo extends React.PureComponent {
    constructor() {
        super(...arguments);
        this.state = {
            openItem: 0
        };
        this.onClick = (index) => {
            this.setState({ openItem: index });
        };
    }
    render() {
        return (React.createElement(DemoRoot, { showGridOverlayToggle: true },
            React.createElement("h2", null, "Navigation Level List"),
            React.createElement(DemoThemeProviderWithToggle, null,
                React.createElement(DemoContainer, null,
                    React.createElement(Layout, null,
                        React.createElement(BreakpointWrapper, { max: Breakpoints.b560 },
                            React.createElement(NavigationLevelList, null, menuItems.map(item => (React.createElement(MobileNavigationItemStateHolder, { key: item.name }, (isOpen, onClick) => (React.createElement(NavigationLevelListItem, { id: item.name.split(/\s+/).join(''), name: item.name, url: item.url, subItems: item.children, isOpen: isOpen, onClick: onClick }))))))),
                        React.createElement(BreakpointWrapper, { min: Breakpoints.b560 },
                            React.createElement(FixedWidthContainer, { columns: 13 },
                                React.createElement(NavigationLevelList, null, menuItems.map((item, index) => (React.createElement(NavigationLevelListItem, { id: item.name.split(/\s+/).join(''), name: item.name, url: item.url, subItems: item.children, isOpen: this.state.openItem === index, onClick: () => this.onClick(index), key: item.name })))))))))));
    }
}
export default NavigationLevelListDemo;
