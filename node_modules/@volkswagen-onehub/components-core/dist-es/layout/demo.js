import * as React from 'react';
import { DemoThemeProviderWithToggle, DemoContainer } from '../demo';
import { DemoRoot } from '../demo/demo-root/index';
import { Breakpoints } from '../helpers';
import { styled } from '../theme-provider';
import { Layout, LayoutConfigurations, LayoutRowGap } from './index';
const DemoContent = styled.div.withConfig({ displayName: "DemoContent", componentId: "sc-1cbb7kw" }) `
	color: ${props => props.theme.text.color.primary};
	border: 1px solid ${props => props.theme.text.color.primary};
	padding: 5px;
`;
const WideDemoContent = styled.div.withConfig({ displayName: "WideDemoContent", componentId: "sc-1ml1t84" }) `
	width: 75vw;
`;
const LayoutDemo = () => (React.createElement(DemoRoot, { showGridOverlayToggle: true },
    React.createElement(DemoThemeProviderWithToggle, null,
        React.createElement("h2", null, "Layout"),
        React.createElement("p", null, "Please note: the layout is a pattern used for arranging it's child components. The child components used here are supposed to visualize the layout, they are not actual patterns."),
        React.createElement("p", null, "There are more children than fit into one row to showcase linebreaks."),
        React.createElement("h3", null, "layout with new appearance configuration"),
        React.createElement("h4", null, "Always 24 columns (default case)"),
        React.createElement(DemoContainer, null,
            React.createElement(Layout, null,
                React.createElement(DemoContent, { key: "first_div" }, "First div"),
                React.createElement(DemoContent, { key: "second_div" }, "Second div"),
                React.createElement(DemoContent, { key: "third_div" }, "Third div"))),
        React.createElement("h4", null, "24 columns on mobile and 12 columns otherwise"),
        React.createElement(DemoContainer, null,
            React.createElement(Layout, { appearance: LayoutConfigurations.half },
                React.createElement(DemoContent, { key: "first_div" }, "First div"),
                React.createElement(DemoContent, { key: "second_div" }, "Second div"),
                React.createElement(DemoContent, { key: "third_div" }, "Third div"))),
        React.createElement("h4", null, "Custom configuration of appearance"),
        React.createElement("p", null, "24 columns on mobile and 12 columns otherwise. Additionally the children switch position on everything bigger than mobile."),
        React.createElement(DemoContainer, null,
            React.createElement(Layout, { appearance: {
                    [Breakpoints.default]: [{ name: 'a', columns: 24 }],
                    [Breakpoints.tablet]: [{ name: 'a', columns: 12 }]
                } },
                React.createElement(DemoContent, { key: "first_div" }, "First div"),
                React.createElement(DemoContent, { key: "second_div" }, "Second div"),
                React.createElement(DemoContent, { key: "third_div" }, "Third div"))),
        React.createElement("h4", null, "With placeholder columns. When a `.` is used as a name for a column it is interpreted as a empty column."),
        React.createElement(DemoContainer, null,
            React.createElement(Layout, { appearance: {
                    [Breakpoints.default]: [
                        { name: 'a', columns: 24 },
                        { name: 'b', columns: 24 }
                    ],
                    [Breakpoints.tablet]: [
                        { name: '.', columns: 2 },
                        { name: 'a', columns: 9 },
                        { name: '.', columns: 1 },
                        { name: 'b', columns: 9 },
                        { name: '.', columns: 2 }
                    ]
                } },
                React.createElement(DemoContent, { key: "first_div" }, "First div"),
                React.createElement(DemoContent, { key: "second_div" }, "Second div"),
                React.createElement(DemoContent, { key: "third_div" }, "Third div"))),
        React.createElement("h4", null, "With `static300` spacing between the rows"),
        React.createElement(DemoContainer, null,
            React.createElement(Layout, { rowGap: LayoutRowGap.static300, appearance: {
                    [Breakpoints.default]: [
                        { name: 'a', columns: 12 },
                        { name: 'b', columns: 12 }
                    ]
                } },
                React.createElement(DemoContent, { key: "first_div" }, "First div"),
                React.createElement(DemoContent, { key: "second_div" }, "Second div"),
                React.createElement(DemoContent, { key: "third_div" }, "Third div"))),
        React.createElement("h4", null, "Before and after: `overflow: hidden` disabled, ie made visible via optional prop"),
        React.createElement(DemoContainer, null,
            React.createElement(Layout, { rowGap: LayoutRowGap.static300, appearance: {
                    [Breakpoints.default]: [
                        { name: 'a', columns: 12 },
                        { name: 'b', columns: 12 }
                    ]
                } },
                React.createElement(DemoContent, { key: "third_div" },
                    React.createElement(WideDemoContent, null, "Before: a wide element which will be contained by the default settings."))),
            React.createElement(Layout, { rowGap: LayoutRowGap.static300, appearance: {
                    [Breakpoints.default]: [
                        { name: 'a', columns: 12 },
                        { name: 'b', columns: 12 }
                    ]
                }, allowOverflowingContent: true },
                React.createElement(DemoContent, { key: "third_div" },
                    React.createElement(WideDemoContent, null, "After: also a wide element where `overflow` is set to *visible* via allowOverflowingContent")))))));
export default LayoutDemo;
