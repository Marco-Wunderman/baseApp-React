import * as React from 'react';
import { DemoContainer } from '../demo/demo-container';
import { DemoRoot } from '../demo/demo-root';
import { DemoThemeProviderWithToggle } from '../demo';
import { Entertainment } from '@volkswagen-onehub/icons-core';
import { CTA } from './index';
import { Container, ContainerGutter, ContainerPadding, ContainerWrap } from '../container';
import { ExternalLinkIndicator } from '../external-link-indicator';
import { Text, TextAppearance } from '../text';
const CTADemo = () => (React.createElement(DemoRoot, { showGridOverlayToggle: true },
    React.createElement(DemoThemeProviderWithToggle, null,
        React.createElement("h2", null, "CTA (includes the former \"Link\" and \"Action Button\")"),
        React.createElement("h3", null, "Emphasis 2 - primary button, size large"),
        React.createElement(DemoContainer, null,
            React.createElement("p", null, "Please use this button without a leading icon. It should be used if there is a context change. There can be an additional trailing external link indicator withing the text."),
            React.createElement(Container, { gutter: ContainerGutter.static200, padding: ContainerPadding.static200 },
                React.createElement(CTA, { tag: "button", emphasis: "primary", onClick: () => {
                        window.alert('click');
                    }, ariaLabel: "primary button aria-label" }, "primary button"),
                React.createElement(CTA, { tag: "button", emphasis: "primary", disabled: true, onClick: () => {
                        window.alert('this cannot happen');
                    } }, "primary button, disabled"),
                React.createElement(CTA, { tag: "a", emphasis: "primary", href: "#" }, "primary button (link)"),
                React.createElement(CTA, { tag: "a", emphasis: "primary", disabled: true, href: "#" }, "primary button (link), disabled"),
                React.createElement(CTA, { tag: "button", emphasis: "primary", onClick: () => {
                        window.alert('click');
                    } },
                    "primary button external ",
                    React.createElement(ExternalLinkIndicator, null)),
                React.createElement(CTA, { tag: "button", emphasis: "primary", onClick: () => {
                        window.alert('click');
                    }, disabled: true },
                    "primary button external, disabled ",
                    React.createElement(ExternalLinkIndicator, null))),
            React.createElement("p", null, "However, it is possible to create a large primary button with an icon, without text, and in a stretched version. Using these variants of the CTA will probably violate NBD guidelines."),
            React.createElement(Container, { gutter: ContainerGutter.static200, padding: ContainerPadding.static200 },
                React.createElement(CTA, { tag: "button", emphasis: "primary", onClick: () => {
                        window.alert('click');
                    }, icon: React.createElement(Entertainment, { variant: "default" }) }, "primary button"),
                React.createElement(CTA, { tag: "button", emphasis: "primary", disabled: true, onClick: () => {
                        window.alert('this cannot happen');
                    }, icon: React.createElement(Entertainment, { variant: "default" }) }, "primary button, disabled"),
                React.createElement(CTA, { tag: "a", emphasis: "primary", href: "#", icon: React.createElement(Entertainment, { variant: "default" }), ariaLabel: "primary button (link) aria-label" }, "primary button (link)"),
                React.createElement(CTA, { tag: "a", emphasis: "primary", disabled: true, href: "#", icon: React.createElement(Entertainment, { variant: "default" }) }, "primary button (link), disabled"),
                React.createElement(CTA, { tag: "button", emphasis: "primary", onClick: () => {
                        window.alert('click');
                    }, icon: React.createElement(Entertainment, { variant: "default" }) }),
                React.createElement(CTA, { tag: "button", emphasis: "primary", disabled: true, onClick: () => {
                        window.alert('this cannot happen');
                    }, icon: React.createElement(Entertainment, { variant: "default" }) }),
                React.createElement(CTA, { tag: "a", emphasis: "primary", href: "#", icon: React.createElement(Entertainment, { variant: "default" }) }),
                React.createElement(CTA, { tag: "a", emphasis: "primary", disabled: true, href: "#", icon: React.createElement(Entertainment, { variant: "default" }) })),
            React.createElement(Container, { gutter: ContainerGutter.static200, padding: ContainerPadding.static200, wrap: ContainerWrap.always },
                React.createElement(CTA, { tag: "button", emphasis: "primary", onClick: () => {
                        window.alert('click');
                    }, stretchContent: true }, "stretched primary button"),
                React.createElement(CTA, { tag: "a", emphasis: "primary", href: "#", stretchContent: true }, "stretched primary button (link)"))),
        React.createElement("h3", null, "Emphasis 2 - primary button, size small"),
        React.createElement(DemoContainer, null,
            React.createElement("p", null, "Please use this button with an icon. It should be used if there is a no context change."),
            React.createElement(Container, { gutter: ContainerGutter.static200, padding: ContainerPadding.static200 },
                React.createElement(CTA, { tag: "button", emphasis: "primary", size: "small", onClick: () => {
                        window.alert('click');
                    }, icon: React.createElement(Entertainment, { variant: "small" }) }, "primary button"),
                React.createElement(CTA, { tag: "button", emphasis: "primary", size: "small", disabled: true, onClick: () => {
                        window.alert('this cannot happen');
                    }, icon: React.createElement(Entertainment, { variant: "small" }) }, "primary button, disabled"),
                React.createElement(CTA, { tag: "a", emphasis: "primary", size: "small", href: "#", icon: React.createElement(Entertainment, { variant: "small" }) }, "primary button (link)"),
                React.createElement(CTA, { tag: "a", emphasis: "primary", size: "small", disabled: true, href: "#", icon: React.createElement(Entertainment, { variant: "small" }) }, "primary button (link), disabled")),
            React.createElement("p", null, "However, it is possible to create a small primary button without an icon, without text, and in a stretched version. Using these variants of the CTA will probably violate NBD guidelines."),
            React.createElement(Container, { gutter: ContainerGutter.static200, padding: ContainerPadding.static200 },
                React.createElement(CTA, { tag: "button", emphasis: "primary", onClick: () => {
                        window.alert('click');
                    }, size: "small" }, "primary button"),
                React.createElement(CTA, { tag: "button", emphasis: "primary", disabled: true, onClick: () => {
                        window.alert('this cannot happen');
                    }, size: "small" }, "primary button, disabled"),
                React.createElement(CTA, { tag: "a", emphasis: "primary", href: "#", size: "small" }, "primary button (link)"),
                React.createElement(CTA, { tag: "a", emphasis: "primary", disabled: true, href: "#", size: "small" }, "primary button (link), disabled"),
                React.createElement(CTA, { tag: "button", emphasis: "primary", onClick: () => {
                        window.alert('click');
                    }, size: "small", icon: React.createElement(Entertainment, { variant: "small" }) }),
                React.createElement(CTA, { tag: "button", emphasis: "primary", disabled: true, onClick: () => {
                        window.alert('this cannot happen');
                    }, size: "small", icon: React.createElement(Entertainment, { variant: "small" }) }),
                React.createElement(CTA, { tag: "a", emphasis: "primary", href: "#", size: "small", icon: React.createElement(Entertainment, { variant: "small" }) }),
                React.createElement(CTA, { tag: "a", emphasis: "primary", disabled: true, href: "#", size: "small", icon: React.createElement(Entertainment, { variant: "small" }) })),
            React.createElement(Container, { gutter: ContainerGutter.static200, padding: ContainerPadding.static200, wrap: ContainerWrap.always },
                React.createElement(CTA, { tag: "button", emphasis: "primary", size: "small", onClick: () => {
                        window.alert('click');
                    }, stretchContent: true }, "stretched primary button"),
                React.createElement(CTA, { tag: "a", emphasis: "primary", size: "small", href: "#", stretchContent: true }, "stretched primary button (link)"))),
        React.createElement("h3", null, "Emphasis 3 - secondary button, size large"),
        React.createElement(DemoContainer, null,
            React.createElement("p", null, "Please use this button without a leading icon. It should be used if there is a context change. There can be an additional trailing external link indicator withing the text."),
            React.createElement(Container, { gutter: ContainerGutter.static200, padding: ContainerPadding.static200 },
                React.createElement(CTA, { tag: "button", emphasis: "secondary", onClick: () => {
                        window.alert('click');
                    } }, "secondary button"),
                React.createElement(CTA, { tag: "button", emphasis: "secondary", disabled: true, onClick: () => {
                        window.alert('this cannot happen');
                    } }, "secondary button, disabled"),
                React.createElement(CTA, { tag: "a", emphasis: "secondary", href: "#" }, "secondary button (link)"),
                React.createElement(CTA, { tag: "a", emphasis: "secondary", disabled: true, href: "#" }, "secondary button (link), disabled"),
                React.createElement(CTA, { tag: "button", emphasis: "secondary", onClick: () => {
                        window.alert('click');
                    } },
                    "secondary button external ",
                    React.createElement(ExternalLinkIndicator, null)),
                React.createElement(CTA, { tag: "button", emphasis: "secondary", onClick: () => {
                        window.alert('click');
                    }, disabled: true },
                    "secondary button external, disabled ",
                    React.createElement(ExternalLinkIndicator, null))),
            React.createElement("p", null, "However, it is possible to create a large secondary button with an icon, without text, and in a stretched version. Using these variants of the CTA will probably violate NBD guidelines."),
            React.createElement(Container, { gutter: ContainerGutter.static200, padding: ContainerPadding.static200 },
                React.createElement(CTA, { tag: "button", emphasis: "secondary", onClick: () => {
                        window.alert('click');
                    }, icon: React.createElement(Entertainment, { variant: "default" }) }, "secondary button"),
                React.createElement(CTA, { tag: "button", emphasis: "secondary", disabled: true, onClick: () => {
                        window.alert('this cannot happen');
                    }, icon: React.createElement(Entertainment, { variant: "default" }) }, "secondary button, disabled"),
                React.createElement(CTA, { tag: "a", emphasis: "secondary", href: "#", icon: React.createElement(Entertainment, { variant: "default" }) }, "secondary button (link)"),
                React.createElement(CTA, { tag: "a", emphasis: "secondary", disabled: true, href: "#", icon: React.createElement(Entertainment, { variant: "default" }) }, "secondary button (link), disabled"),
                React.createElement(CTA, { tag: "button", emphasis: "secondary", onClick: () => {
                        window.alert('click');
                    }, icon: React.createElement(Entertainment, { variant: "default" }) }),
                React.createElement(CTA, { tag: "button", emphasis: "secondary", disabled: true, onClick: () => {
                        window.alert('this cannot happen');
                    }, icon: React.createElement(Entertainment, { variant: "default" }) }),
                React.createElement(CTA, { tag: "a", emphasis: "secondary", href: "#", icon: React.createElement(Entertainment, { variant: "default" }) }),
                React.createElement(CTA, { tag: "a", emphasis: "secondary", disabled: true, href: "#", icon: React.createElement(Entertainment, { variant: "default" }) })),
            React.createElement(Container, { gutter: ContainerGutter.static200, padding: ContainerPadding.static200, wrap: ContainerWrap.always },
                React.createElement(CTA, { tag: "button", emphasis: "secondary", onClick: () => {
                        window.alert('click');
                    }, stretchContent: true }, "stretched secondary button"),
                React.createElement(CTA, { tag: "a", emphasis: "secondary", href: "#", stretchContent: true }, "stretched secondary button (link)"))),
        React.createElement("h3", null, "Emphasis 3 - secondary button, size small"),
        React.createElement(DemoContainer, null,
            React.createElement("p", null, "Please use this button with an icon. It should be used if there is a no context change."),
            React.createElement(Container, { gutter: ContainerGutter.static200, padding: ContainerPadding.static200 },
                React.createElement(CTA, { tag: "button", emphasis: "secondary", size: "small", onClick: () => {
                        window.alert('click');
                    }, icon: React.createElement(Entertainment, { variant: "small" }) }, "secondary button"),
                React.createElement(CTA, { tag: "button", emphasis: "secondary", size: "small", disabled: true, onClick: () => {
                        window.alert('this cannot happen');
                    }, icon: React.createElement(Entertainment, { variant: "small" }) }, "secondary button, disabled"),
                React.createElement(CTA, { tag: "a", emphasis: "secondary", size: "small", href: "#", icon: React.createElement(Entertainment, { variant: "small" }) }, "secondary button (link)"),
                React.createElement(CTA, { tag: "a", emphasis: "secondary", size: "small", disabled: true, href: "#", icon: React.createElement(Entertainment, { variant: "small" }) }, "secondary button (link), disabled")),
            React.createElement("p", null, "However, it is possible to create a small secondary button without an icon, without text, and in a stretched version. Using these variants of the CTA will probably violate NBD guidelines."),
            React.createElement(Container, { gutter: ContainerGutter.static200, padding: ContainerPadding.static200 },
                React.createElement(CTA, { tag: "button", emphasis: "secondary", onClick: () => {
                        window.alert('click');
                    }, size: "small" }, "secondary button"),
                React.createElement(CTA, { tag: "button", emphasis: "secondary", disabled: true, onClick: () => {
                        window.alert('this cannot happen');
                    }, size: "small" }, "secondary button, disabled"),
                React.createElement(CTA, { tag: "a", emphasis: "secondary", href: "#", size: "small" }, "secondary button (link)"),
                React.createElement(CTA, { tag: "a", emphasis: "secondary", disabled: true, href: "#", size: "small" }, "secondary button (link), disabled"),
                React.createElement(CTA, { tag: "button", emphasis: "secondary", onClick: () => {
                        window.alert('click');
                    }, size: "small", icon: React.createElement(Entertainment, { variant: "small" }) }),
                React.createElement(CTA, { tag: "button", emphasis: "secondary", disabled: true, onClick: () => {
                        window.alert('this cannot happen');
                    }, size: "small", icon: React.createElement(Entertainment, { variant: "small" }) }),
                React.createElement(CTA, { tag: "a", emphasis: "secondary", href: "#", size: "small", icon: React.createElement(Entertainment, { variant: "small" }) }),
                React.createElement(CTA, { tag: "a", emphasis: "secondary", disabled: true, href: "#", size: "small", icon: React.createElement(Entertainment, { variant: "small" }) })),
            React.createElement(Container, { gutter: ContainerGutter.static200, padding: ContainerPadding.static200, wrap: ContainerWrap.always },
                React.createElement(CTA, { tag: "button", emphasis: "secondary", size: "small", onClick: () => {
                        window.alert('click');
                    }, stretchContent: true }, "stretched secondary button"),
                React.createElement(CTA, { tag: "a", emphasis: "secondary", size: "small", href: "#", stretchContent: true }, "stretched secondary button (link)"))),
        React.createElement("h3", null, "Emphasis 4 - tertiary button / link, without icons"),
        React.createElement(DemoContainer, null,
            React.createElement("p", null, "Please use this link without a leading icon if there is a context change. There can be an additional trailing external link indicator withing the text."),
            React.createElement(Container, { gutter: ContainerGutter.static200, padding: ContainerPadding.static200 },
                React.createElement(CTA, { tag: "a", emphasis: "tertiary", href: "#", ariaLabel: "tertiary link aria-label" }, "tertiary link"),
                React.createElement(CTA, { tag: "a", emphasis: "tertiary", disabled: true, href: "#" }, "tertiary link, disabled"),
                React.createElement(CTA, { tag: "button", emphasis: "tertiary", onClick: () => {
                        window.alert('click');
                    }, ariaLabel: "tertiary link (button) aria-label" }, "tertiary link (button)"),
                React.createElement(CTA, { tag: "button", emphasis: "tertiary", disabled: true, onClick: () => {
                        window.alert('this cannot happen');
                    } }, "tertiary link (button), disabled"),
                React.createElement(CTA, { tag: "a", emphasis: "tertiary", href: "#" },
                    "tertiary link external ",
                    React.createElement(ExternalLinkIndicator, null)),
                React.createElement(CTA, { tag: "a", emphasis: "tertiary", href: "#", disabled: true },
                    "tertiary link external ",
                    React.createElement(ExternalLinkIndicator, null)))),
        React.createElement("h3", null, "Emphasis 4 - tertiary button / link, with icons"),
        React.createElement(DemoContainer, null,
            React.createElement("p", null, "Please use this link with a leading icon if there is no context change."),
            React.createElement(Container, { gutter: ContainerGutter.static200, padding: ContainerPadding.static200 },
                React.createElement(CTA, { tag: "a", emphasis: "tertiary", href: "#", icon: React.createElement(Entertainment, { variant: "default" }) }, "tertiary link"),
                React.createElement(CTA, { tag: "a", emphasis: "tertiary", disabled: true, href: "#", icon: React.createElement(Entertainment, { variant: "default" }) }, "tertiary link, disabled"),
                React.createElement(CTA, { tag: "button", emphasis: "tertiary", onClick: () => {
                        window.alert('click');
                    }, icon: React.createElement(Entertainment, { variant: "default" }) }, "tertiary link (button)"),
                React.createElement(CTA, { tag: "button", emphasis: "tertiary", disabled: true, onClick: () => {
                        window.alert('this cannot happen');
                    }, icon: React.createElement(Entertainment, { variant: "default" }) }, "tertiary link (button), disabled")),
            React.createElement("p", null, "However, it is possible to create a link with an icon but without text. Using this variant of the CTA will probably violate NBD guidelines."),
            React.createElement(Container, { gutter: ContainerGutter.static200, padding: ContainerPadding.static200 },
                React.createElement(CTA, { tag: "a", emphasis: "tertiary", href: "#", icon: React.createElement(Entertainment, { variant: "default" }) }),
                React.createElement(CTA, { tag: "a", emphasis: "tertiary", disabled: true, href: "#", icon: React.createElement(Entertainment, { variant: "default" }) }),
                React.createElement(CTA, { tag: "button", emphasis: "tertiary", onClick: () => {
                        window.alert('click');
                    }, icon: React.createElement(Entertainment, { variant: "default" }) }),
                React.createElement(CTA, { tag: "button", emphasis: "tertiary", disabled: true, onClick: () => {
                        window.alert('this cannot happen');
                    }, icon: React.createElement(Entertainment, { variant: "default" }) }))),
        React.createElement("h3", null, "Emphasis 4 - tertiary button / link, without icons, used inline"),
        React.createElement("p", null, "Please note: inline tertiary CTAs using the tag \"button\" may show unexpected word wrap behaviour."),
        React.createElement(DemoContainer, null,
            React.createElement(Text, { appearance: TextAppearance.copy0200 },
                "Lorem ipsum dolor sit amet consectetur adipisicing elit. Vitae, excepturi unde voluptatibus deserunt dolorem nobis nulla consectetur temporibus debitis recusandae ab beatae aperiam expedita totam officia magni quia deleniti. Impedit.",
                ' ',
                React.createElement(CTA, { tag: "a", emphasis: "tertiary", href: "#" }, "tertiary link"),
                ' ',
                "Lorem ipsum dolor sit amet consectetur adipisicing elit. Vitae, excepturi unde voluptatibus deserunt dolorem nobis nulla consectetur temporibus debitis recusandae ab beatae aperiam expedita totam officia magni quia deleniti. Impedit.",
                ' ',
                React.createElement(CTA, { tag: "a", emphasis: "tertiary", href: "#" },
                    "tertiary link external ",
                    React.createElement(ExternalLinkIndicator, null)),
                ' ',
                "Lorem ipsum dolor sit amet consectetur adipisicing elit. Vitae, excepturi unde voluptatibus deserunt dolorem nobis nulla consectetur temporibus debitis recusandae ab beatae aperiam expedita totam officia magni quia deleniti. Impedit."),
            React.createElement(Text, { appearance: TextAppearance.copy0300 },
                "Lorem ipsum dolor sit amet consectetur adipisicing elit. Vitae, excepturi unde voluptatibus deserunt dolorem nobis nulla consectetur temporibus debitis recusandae ab beatae aperiam expedita totam officia magni quia deleniti. Impedit.",
                ' ',
                React.createElement(CTA, { tag: "button", emphasis: "tertiary", onClick: () => window.alert('click') }, "tertiary link"),
                ' ',
                "Lorem ipsum dolor sit amet consectetur adipisicing elit. Vitae, excepturi unde voluptatibus deserunt dolorem nobis nulla consectetur temporibus debitis recusandae ab beatae aperiam expedita totam officia magni quia deleniti. Impedit.",
                ' ',
                React.createElement(CTA, { tag: "button", emphasis: "tertiary", onClick: () => window.alert('click') },
                    "tertiary link external ",
                    React.createElement(ExternalLinkIndicator, null)),
                ' ',
                "Lorem ipsum dolor sit amet consectetur adipisicing elit. Vitae, excepturi unde voluptatibus deserunt dolorem nobis nulla consectetur temporibus debitis recusandae ab beatae aperiam expedita totam officia magni quia deleniti. Impedit.")))));
export default CTADemo;
