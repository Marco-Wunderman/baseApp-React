import * as React from 'react';
import { ThemeProvider as StyledComponentsThemeProvider } from 'styled-components';
import { getTheme } from './get-theme';
export const ThemeProviderContext = React.createContext({});
/**
 * ThemeProvider component
 *
 * Provides a theme object to all it's child components via `styled-components`' ThemeProvider
 *
 * @param props Component properties
 */
export function ThemeProvider(props) {
    const { children, theme: newTheme, themeContextOptions } = props;
    const validChildren = React.Children.toArray(children).filter(React.isValidElement);
    if (!validChildren.length) {
        return null;
    }
    // Hint: Do not remove the fragment (<>...</>) below. It is absolutely
    // necessary to ensure the theme provider's children have the correct type.
    return (React.createElement(ThemeProviderContext.Consumer, null, context => (React.createElement(ThemeProviderContext.Provider, { value: Object.assign({}, context, themeContextOptions) },
        React.createElement(StyledComponentsThemeProvider, { theme: (currentTheme) => getTheme(currentTheme, newTheme) },
            React.createElement(React.Fragment, null, validChildren))))));
}
