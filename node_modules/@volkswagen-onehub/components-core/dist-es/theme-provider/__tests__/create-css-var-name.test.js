import { createCSSVarName } from '../create-css-var-name';
describe('createCSSVarName', () => {
    test('undefined', () => {
        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */
        expect(() => createCSSVarName(undefined)).toThrowError();
    });
    test('empty string', () => {
        expect(() => createCSSVarName('')).toThrowError();
    });
    test('empty object', () => {
        expect(() => createCSSVarName({})).toThrowError();
    });
    test('plain string', () => {
        expect(createCSSVarName('test')).toBe('--test');
        expect(createCSSVarName('test/123$abc')).toBe('--test-123-abc');
    });
    test('object', () => {
        expect(createCSSVarName({ key: 'value' })).toBe('--key-value');
        expect(createCSSVarName({ key1: 'test/123$abc', key2: 'fooo' })).toBe('--key1-test-123-abc-key2-fooo');
        expect(createCSSVarName({ key2: 'fooo', key1: 'test/123$abc' })).toBe('--key1-test-123-abc-key2-fooo');
    });
    test('with prefix', () => {
        expect(createCSSVarName('test', 'prefix')).toBe('--prefix-test');
        expect(createCSSVarName({ key: 'value' }, 'prefix')).toBe('--prefix-key-value');
    });
});
