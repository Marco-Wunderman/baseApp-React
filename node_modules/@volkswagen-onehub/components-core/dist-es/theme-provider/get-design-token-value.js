/* eslint-disable-next-line import/default */
import get from 'lodash.get';
import { warnWithTrace } from '../helpers/logger';
import { createCSSVarName } from './create-css-var-name';
import { injectDesignTokensOption } from './inject-design-tokens-option';
export function getDesignTokenValue(propertyPath = '', optionsOverride) {
    if (!propertyPath) {
        warnWithTrace(`Design token value could not be found: ${propertyPath}`);
        return undefined;
    }
    const options = injectDesignTokensOption(optionsOverride);
    const designTokenValue = get(options.tokens, propertyPath);
    // array values, return css var instead
    // the assumption is that every array is a dynamic designToken
    if (Array.isArray(designTokenValue)) {
        // @todo: we need to add a fallback for browsers that cannot handle css vars
        return `var(${createCSSVarName(propertyPath)})`;
    }
    return typeof designTokenValue === 'string' ? designTokenValue : undefined;
}
