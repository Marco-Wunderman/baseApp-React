import * as React from 'react';
import { DemoContainer } from '../demo/demo-container';
import { DemoRoot } from '../demo/demo-root';
import { DemoThemeProviderWithToggle } from '../demo/demo-theme-provider-with-toggle';
import { Text, TextTag } from './../text';
import { ThemeProvider, styled } from './index';
const StyledDemoElementContainer = styled.div.withConfig({ displayName: "StyledDemoElementContainer", componentId: "sc-1674ujd" }) `
	min-height: 40px;
	line-height: 40px;
	padding: 0 ${props => props.theme.size.static200};
	color: ${props => props.theme.text.color.primary};
	background: ${props => props.theme.container.background.primary};
	border: 1px solid ${props => props.theme.text.color.primary};
`;
const StyledDummyBox = styled.div.withConfig({ displayName: "StyledDummyBox", componentId: "sc-ugi6lx" }) `
	height: 20px;
	width: 20px;
	margin: ${props => props.theme.size.static100};
	background: ${props => props.theme.container.background.secondary};
	border: 1px solid ${props => props.theme.text.color.secondary};
	border-radius: 4px;
`;
const demoText = 'Theme: ';
const demoThemeOverride1 = {
    container: {
        background: {
            primary: 'color.blue-600',
            secondary: 'color.blue-900'
        }
    }
};
const demoThemeOverride2 = {
    container: {
        background: {
            primary: 'color.blue-900',
            secondary: 'color.blue-600'
        }
    }
};
const ThemeProviderDemo = () => (React.createElement(DemoRoot, null,
    React.createElement("h2", null, "Theme Provider"),
    React.createElement("p", null, "Please note: the theme provider is a technical pattern used for changing it's child components' appearences. The child components used here are supposed to visualize this effect, they are not actual patterns."),
    React.createElement("hr", null),
    React.createElement("h4", null, "ThemeProvider with standard theme, no theme or override"),
    React.createElement(DemoThemeProviderWithToggle, null,
        React.createElement(DemoContainer, null,
            React.createElement(StyledDummyBox, null),
            React.createElement(Text, { tag: TextTag.p },
                demoText,
                " default"))),
    React.createElement("h4", null, "ThemeProvider with standard theme, partial overrides"),
    React.createElement(ThemeProvider, { theme: demoThemeOverride1 },
        React.createElement(StyledDemoElementContainer, null,
            React.createElement(StyledDummyBox, null),
            React.createElement("p", null,
                demoText,
                " demoThemeOverride1"))),
    React.createElement("h4", null, "ThemeProvider with multiple child elements on same level"),
    React.createElement(ThemeProvider, { theme: "main" },
        React.createElement(StyledDemoElementContainer, null,
            React.createElement(StyledDummyBox, null),
            React.createElement("p", null,
                demoText,
                " main")),
        React.createElement(StyledDemoElementContainer, null,
            React.createElement(StyledDummyBox, null),
            React.createElement("p", null,
                demoText,
                " main"))),
    React.createElement("h4", null, "Multiple nested ThemeProviders"),
    React.createElement(ThemeProvider, { theme: "main" },
        React.createElement(StyledDemoElementContainer, null,
            React.createElement(StyledDummyBox, null),
            demoText,
            " main",
            React.createElement(ThemeProvider, { theme: demoThemeOverride1 },
                React.createElement(StyledDemoElementContainer, null,
                    React.createElement(StyledDummyBox, null),
                    demoText,
                    " demoThemeOverride1",
                    React.createElement(ThemeProvider, { theme: demoThemeOverride2 },
                        React.createElement(StyledDemoElementContainer, null,
                            React.createElement(StyledDummyBox, null),
                            demoText,
                            " demoThemeOverride2")),
                    React.createElement(ThemeProvider, null,
                        React.createElement(StyledDemoElementContainer, null,
                            React.createElement(StyledDummyBox, null),
                            demoText,
                            " default")))))),
    React.createElement("h4", null, "Empty ThemeProvider: nothing is rendered"),
    React.createElement(ThemeProvider, null)));
export default ThemeProviderDemo;
