import * as React from 'react';
import { Text, TextAppearance } from '../../text';
import { styled } from '../../theme-provider';
import { DemoThemeProviderToggleContext } from '../demo-theme-provider-with-toggle';
import { _fontFamilyStyles } from '../../integrator-root';
const StyledDemoContainer = styled.div.withConfig({ displayName: "StyledDemoContainer", componentId: "sc-1af40rc" }) `
	${props => !props.withoutSpacings &&
    `
			margin: 0 0 ${props.theme.size.static400} 0;
			padding-top: ${props.theme.size.static150};
			padding-bottom: ${props.theme.size.static150};
		`}
	background: ${props => props.backgroundImage
    ? `url(${props.backgroundImage})`
    : props.hasBackgroundImage
        ? 'url(/api/static/component-files/demo/blurred.png)'
        : props.theme.global.backgroundColor};
	background-size: cover;
	direction: ${props => props.direction};

	${_fontFamilyStyles}
`;
export const DemoContainer = props => {
    const { children, hasBackgroundImage, backgroundImage, headline, language, withoutSpacings } = props;
    return (React.createElement(DemoThemeProviderToggleContext.Consumer, null, value => (React.createElement(StyledDemoContainer, { hasBackgroundImage: value.hasImageTheme || hasBackgroundImage, backgroundImage: backgroundImage, direction: props.direction || value.direction, lang: language || value.language, withoutSpacings: withoutSpacings },
        headline && (React.createElement(Text, { appearance: TextAppearance.copy200, bold: true }, headline)),
        children))));
};
