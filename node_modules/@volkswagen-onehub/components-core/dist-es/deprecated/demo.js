var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import * as React from 'react';
import { deprecated } from './index';
const AnonymousFunctionalComponent = deprecated(() => (React.createElement("h3", null, "Anonymous")));
const AnonymousFunctionalComponentWithMessage = deprecated(() => React.createElement("h3", null, "Anonymous with custom message"), 'Anonymous with custom message is deprecated!');
function RawNamedFunctionalComponent() {
    return React.createElement("h3", null, "Named");
}
const NamedFunctionalComponent = deprecated(RawNamedFunctionalComponent);
function RawNamedFunctionalComponentWithMessage() {
    return React.createElement("h3", null, "Named with custom message");
}
const NamedFunctionalComponentWithMessage = deprecated(RawNamedFunctionalComponentWithMessage, 'Named with custom message is deprecated');
const FunctionalComponentProps = deprecated(() => React.createElement("h3", null, "Props"), ['title']);
const FunctionalComponentPropsWithMessage = deprecated(() => React.createElement("h2", null, "Props with custom messages"), [['title', 'Props with custom messages deprecated the title prop!']]);
const FunctionalComponentPropsWithMixedMessage = deprecated(() => React.createElement("h3", null, "Props with mixed messages"), [
    ['title', 'Props with mixed messages deprecated the title prop!'],
    'content',
    ['filter']
]);
/* Class component deprecations */
let NamedComponent = class NamedComponent extends React.Component {
    render() {
        return React.createElement("h3", null, "Named");
    }
};
NamedComponent = __decorate([
    deprecated()
], NamedComponent);
let NamedComponentWithMessage = class NamedComponentWithMessage extends React.Component {
    render() {
        return React.createElement("h3", null, "Named with custom message");
    }
};
NamedComponentWithMessage = __decorate([
    deprecated('Named with custom message is deprecated')
], NamedComponentWithMessage);
class ComponentMethod extends React.Component {
    handleSomething() {
        return;
    }
    render() {
        this.handleSomething();
        return React.createElement("h3", null, "On class method");
    }
}
__decorate([
    deprecated()
], ComponentMethod.prototype, "handleSomething", null);
class ComponentMethodWithMessage extends React.Component {
    handleSomething() {
        return;
    }
    render() {
        this.handleSomething();
        return React.createElement("h3", null, "On class method with custom message");
    }
}
__decorate([
    deprecated('On class method with custom message is deprecated')
], ComponentMethodWithMessage.prototype, "handleSomething", null);
let Props = class Props extends React.Component {
    render() {
        return React.createElement("h3", null, "Props");
    }
};
Props = __decorate([
    deprecated(['title'])
], Props);
let PropsWithMessage = class PropsWithMessage extends React.Component {
    render() {
        return React.createElement("h3", null, "Props with custom messages");
    }
};
PropsWithMessage = __decorate([
    deprecated([
        ['title', 'Props with custom messages is deprecated']
    ])
], PropsWithMessage);
let PropsWithMixedMessage = class PropsWithMixedMessage extends React.Component {
    render() {
        return React.createElement("h3", null, "Props with mixed messages");
    }
};
PropsWithMixedMessage = __decorate([
    deprecated([
        ['title', 'Props with mixed messages deprecated the title prop!'],
        'content',
        ['filter']
    ])
], PropsWithMixedMessage);
let StaticPropertiesHoistedOriginal = class StaticPropertiesHoistedOriginal extends React.Component {
    render() {
        return React.createElement("h3", null, "Hoisted static properties");
    }
};
StaticPropertiesHoistedOriginal.defaultProps = {
    title: 'Wow'
};
StaticPropertiesHoistedOriginal.foo = true;
StaticPropertiesHoistedOriginal = __decorate([
    deprecated()
], StaticPropertiesHoistedOriginal);
class StaticPropertiesHoisted extends React.Component {
    render() {
        return (React.createElement("h3", null,
            "Default prop \"title\" from deprecated component:",
            ' ',
            StaticPropertiesHoistedOriginal.defaultProps.title));
    }
}
class RawHigherOrderComponent extends React.Component {
    render() {
        return React.createElement("h3", null, "Props with mixed messages");
    }
}
const HigherOrderComponent = deprecated([
    [
        'title',
        'Props with mixed messages on a higher order component deprecated the title prop!'
    ],
    'content',
    ['filter']
])(RawHigherOrderComponent);
export default function DeprecatedDemo() {
    return (React.createElement(React.Fragment, null,
        React.createElement("div", null,
            React.createElement("h1", null, "This demo shows deprecated components, methods and properties. Please open your dev tools to view the deprecation warnings."),
            React.createElement("h2", null, "Functional components"),
            React.createElement(AnonymousFunctionalComponent, null),
            React.createElement(AnonymousFunctionalComponentWithMessage, null),
            React.createElement(NamedFunctionalComponent, null),
            React.createElement(NamedFunctionalComponentWithMessage, null),
            React.createElement(FunctionalComponentProps, { title: "I'm deprecated!" }),
            React.createElement(FunctionalComponentPropsWithMessage, { title: "Again!" }),
            React.createElement(FunctionalComponentPropsWithMixedMessage, { title: "And another one!", filter: true })),
        React.createElement("div", null,
            React.createElement("h2", null, "Class Components"),
            React.createElement("p", null, "Disclaimer: No decorator for class expression allowed. See test.tsx for more information."),
            React.createElement(NamedComponent, null),
            React.createElement(NamedComponentWithMessage, null),
            React.createElement(ComponentMethod, null),
            React.createElement(ComponentMethodWithMessage, null),
            React.createElement(Props, { title: "I'm deprecated!" }),
            React.createElement(PropsWithMessage, { title: "Again!" }),
            React.createElement(PropsWithMixedMessage, { title: "And another one!", filter: true }),
            React.createElement(HigherOrderComponent, { title: "As a higher order component!", filter: true }),
            React.createElement(StaticPropertiesHoisted, null))));
}
