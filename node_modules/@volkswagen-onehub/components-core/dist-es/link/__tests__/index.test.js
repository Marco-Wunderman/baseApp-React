import { mount } from 'enzyme';
import 'jest-styled-components';
import * as React from 'react';
import * as renderer from 'react-test-renderer';
import { ThemeProvider } from '../../theme-provider';
import { Link } from '../index';
describe('Link', () => {
    test('empty link', () => {
        const link = mount(React.createElement(ThemeProvider, null,
            React.createElement(Link, null)));
        expect(link.find('a').length).toBe(1);
        expect(link.find('a span').length).toBe(0);
        expect(link.find('a').get(0).props.href).toBeFalsy();
    });
    test('link with text', () => {
        const link = mount(React.createElement(ThemeProvider, null,
            React.createElement(Link, null, "hallo")));
        expect(link.find('a').text()).toBe('hallo');
    });
    test('link with href', () => {
        const link = mount(React.createElement(ThemeProvider, null,
            React.createElement(Link, { href: "/href" })));
        expect(link.find('a').get(0).props.href).toBe('/href');
    });
    test('link with disabled', () => {
        const link = renderer
            .create(React.createElement(ThemeProvider, null,
            React.createElement(Link, { disabled: true })))
            .toJSON();
        expect(link).toHaveStyleRule('pointer-events', 'none');
    });
    test('link without disabled', () => {
        const link = renderer
            .create(React.createElement(ThemeProvider, null,
            React.createElement(Link, null)))
            .toJSON();
        expect(link).not.toHaveStyleRule('pointer-events');
    });
});
