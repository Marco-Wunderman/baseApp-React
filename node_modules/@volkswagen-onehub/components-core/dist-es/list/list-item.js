import * as React from 'react';
import { Text } from '../text';
import { styled } from '../theme-provider';
const StyledListItem = styled.li.withConfig({ displayName: "StyledListItem", componentId: "sc-112v5tu" }) `
	display: grid;
	grid-template-columns: max-content auto;
	align-items: center;
	margin-top: ${props => props.gutter ? props.theme.size[props.gutter] : props.theme.size.static300};
	margin-bottom: ${props => props.gutter ? props.theme.size[props.gutter] : props.theme.size.static300};
	grid-column-gap: 1em;
`;
const StyledFlexItem = styled.div.withConfig({ displayName: "StyledFlexItem", componentId: "sc-1vgqn61" }) `
	vertical-align: middle;
`;
const Marker = (props) => {
    const { index = 0, isOrdered = false, markerSize = 0 } = props;
    return isOrdered ? (React.createElement(Text, { bold: true },
        index.toString().padStart(markerSize, '0'),
        " ")) : (React.createElement(Text, { bold: true }, "\u2014 "));
};
const convertPlainTextToTextComponent = (children) => {
    if (typeof children === 'string') {
        return React.createElement(Text, null, children);
    }
    return children;
};
export const ListItem = props => {
    const { children, index, isOrdered = false, gutter, markerSize } = props;
    return (React.createElement(StyledListItem, { isOrdered: isOrdered, index: index, gutter: gutter, markerSize: markerSize },
        React.createElement(StyledFlexItem, null,
            React.createElement(Marker, { isOrdered: isOrdered, index: index, markerSize: markerSize }, children)),
        React.createElement(StyledFlexItem, null, convertPlainTextToTextComponent(children))));
};
