/// <reference types="styled-components" />
import * as React from 'react';
import { ThemeDefinition } from '../theme-provider';
export interface NextBestAction {
    readonly content: JSX.Element | string;
    readonly icon: JSX.Element;
    onClick?(e: React.SyntheticEvent<HTMLButtonElement>): void;
}
export interface NextBestActionButtonProps {
    readonly theme: ThemeDefinition;
    readonly action: NextBestAction;
    readonly expandContent?: boolean;
}
interface NextBestActionButtonState {
    readonly direction?: 'ltr' | 'rtl';
}
declare class NextBestActionButtonInternal extends React.Component<NextBestActionButtonProps, NextBestActionButtonState> {
    constructor(props: NextBestActionButtonProps);
    protected readonly handleClick: (e: React.SyntheticEvent<HTMLButtonElement, Event>) => void;
    componentDidMount(): void;
    private ref;
    render(): JSX.Element;
}
export declare const NextBestActionButton: React.ForwardRefExoticComponent<Pick<NextBestActionButtonProps & React.RefAttributes<NextBestActionButtonInternal>, "key" | "ref" | "action" | "expandContent"> & {
    theme?: any;
}>;
export {};
