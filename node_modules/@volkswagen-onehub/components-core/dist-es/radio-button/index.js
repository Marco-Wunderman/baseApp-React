import * as React from 'react';
import { RadioButtonBorder, RadioButtonInner } from '@volkswagen-onehub/icons-core';
import { Text, TextColor, TextTag } from '../text';
import { styled } from '../theme-provider';
const noop = () => undefined;
const StyledLabel = styled.label.withConfig({ displayName: "StyledLabel", componentId: "sc-12cr2ii" }) `
	position: relative;
	color: ${props => props.theme.interaction.recipe450.default};
	cursor: pointer;
`;
const StyledRadioWrapper = styled.span.withConfig({ displayName: "StyledRadioWrapper", componentId: "sc-1n1yaaw" }) `
	position: relative;
	height: ${props => props.theme.textAppearances.copy0200.lineHeight};
	display: flex;
	align-items: center;
`;
const StyledRadioInner = styled(RadioButtonInner).withConfig({ displayName: "StyledRadioInner", componentId: "sc-1ow7h3g" }) `
	position: absolute;
	display: block;
	opacity: 0;
`;
const StyledFocusWrapper = styled.span.withConfig({ displayName: "StyledFocusWrapper", componentId: "sc-1nt8p46" }) `
	display: grid;
	grid-column-gap: ${props => props.theme.size.static200};
	grid-template-columns: max-content auto;

	/* we need a higher specificity here than :checked or :focus */
	&&&:hover {
		color: ${props => props.theme.interaction.recipe450.hover};
	}
`;
const StyledInput = styled.input.withConfig({ displayName: "StyledInput", componentId: "sc-grykbk" }) `
	position: absolute;
	opacity: 0;
	outline: 0;
	user-select: none;
	pointer-events: none;


	:checked {
		+ ${StyledFocusWrapper} {
			color: ${props => props.theme.interaction.recipe450.checked};

			${StyledRadioWrapper} {
				${StyledRadioInner} {
					opacity: 1;
				}
			}
		}
	}

	:focus {
		+ ${StyledFocusWrapper} {
			outline: 1px solid ${props => props.theme.interaction.recipe100.active};
			outline-offset: 2px;
			color: ${props => props.theme.interaction.recipe450.active};
		}
	}

	/* we need a higher specificity here than :hover */
	&&&:disabled {
		+ ${StyledFocusWrapper} {
			cursor: not-allowed;
			color: ${props => props.theme.interaction.recipe450.disabled};
			}
		}
	}
`;
export class RadioButton extends React.Component {
    constructor() {
        super(...arguments);
        this.handleChange = (e) => {
            const { onChange = noop } = this.props;
            onChange(e, this.props);
        };
        this.handleBlur = (e) => {
            const { onBlur = noop } = this.props;
            onBlur(e, this.props);
        };
        this.handleFocus = (e) => {
            const { onFocus = noop } = this.props;
            onFocus(e, this.props);
        };
        this.handleClick = (e) => {
            const { onClick = noop } = this.props;
            onClick(e, this.props);
        };
    }
    render() {
        const { checked, disabled, id, name, value, label = '' } = this.props;
        return (React.createElement(StyledLabel, null,
            React.createElement(StyledInput, { checked: checked, disabled: disabled, id: id, name: name, onBlur: this.handleBlur, onChange: this.handleChange, onClick: this.handleClick, onFocus: this.handleFocus, type: "radio", value: value }),
            React.createElement(StyledFocusWrapper, null,
                React.createElement(StyledRadioWrapper, null,
                    React.createElement(RadioButtonBorder, { variant: "default" }),
                    React.createElement(StyledRadioInner, { variant: "default" })),
                React.createElement("span", null, label &&
                    (typeof label === 'string' ? (React.createElement(Text, { tag: TextTag.span, color: TextColor.inherit }, label)) : (label))))));
    }
}
