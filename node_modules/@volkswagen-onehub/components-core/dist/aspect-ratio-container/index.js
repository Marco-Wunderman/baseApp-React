"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const React = __importStar(require("react"));
const theme_provider_1 = require("../theme-provider");
var AspectRatio;
(function (AspectRatio) {
    AspectRatio["16:9"] = "16:9";
    AspectRatio["9:16"] = "9:16";
    AspectRatio["4:3"] = "4:3";
    AspectRatio["3:4"] = "3:4";
    AspectRatio["1:1"] = "1:1";
    AspectRatio["10:6"] = "10:6";
    AspectRatio["6:5"] = "6:5";
    AspectRatio["2:1"] = "2:1";
    AspectRatio["2:3"] = "2:3";
    AspectRatio["4:5"] = "4:5";
    AspectRatio["3:2"] = "3:2";
})(AspectRatio = exports.AspectRatio || (exports.AspectRatio = {}));
const StyledWrapper = theme_provider_1.styled.div.withConfig({ displayName: "StyledWrapper", componentId: "sc-iw10kj" }) `
	position: relative;
	width: 100%;
	height: 0;
	padding-bottom: ${props => props.aspectRatio * 100}%;

	> * {
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
	}
`;
StyledWrapper.displayName = 'StyledWrapper';
/**
 * Calculates numeric ratio.
 * @param ratio - aspect ratio definition
 */
function calcAspectRatio(ratio) {
    const [width, height] = ratio.split(':');
    return Number(height) / Number(width);
}
exports.calcAspectRatio = calcAspectRatio;
exports.AspectRatioContainer = props => {
    const { ratio, children } = props;
    const aspectRatio = calcAspectRatio(ratio);
    return React.createElement(StyledWrapper, { aspectRatio: aspectRatio }, children);
};
exports.AspectRatioContainer.displayName = 'AspectRatioContainer';
