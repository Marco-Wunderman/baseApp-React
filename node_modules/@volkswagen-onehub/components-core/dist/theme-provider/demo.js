"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const React = __importStar(require("react"));
const demo_container_1 = require("../demo/demo-container");
const demo_root_1 = require("../demo/demo-root");
const demo_theme_provider_with_toggle_1 = require("../demo/demo-theme-provider-with-toggle");
const text_1 = require("./../text");
const index_1 = require("./index");
const StyledDemoElementContainer = index_1.styled.div.withConfig({ displayName: "StyledDemoElementContainer", componentId: "sc-1674ujd" }) `
	min-height: 40px;
	line-height: 40px;
	padding: 0 ${props => props.theme.size.static200};
	color: ${props => props.theme.text.color.primary};
	background: ${props => props.theme.container.background.primary};
	border: 1px solid ${props => props.theme.text.color.primary};
`;
const StyledDummyBox = index_1.styled.div.withConfig({ displayName: "StyledDummyBox", componentId: "sc-ugi6lx" }) `
	height: 20px;
	width: 20px;
	margin: ${props => props.theme.size.static100};
	background: ${props => props.theme.container.background.secondary};
	border: 1px solid ${props => props.theme.text.color.secondary};
	border-radius: 4px;
`;
const demoText = 'Theme: ';
const demoThemeOverride1 = {
    container: {
        background: {
            primary: 'color.blue-600',
            secondary: 'color.blue-900'
        }
    }
};
const demoThemeOverride2 = {
    container: {
        background: {
            primary: 'color.blue-900',
            secondary: 'color.blue-600'
        }
    }
};
const ThemeProviderDemo = () => (React.createElement(demo_root_1.DemoRoot, null,
    React.createElement("h2", null, "Theme Provider"),
    React.createElement("p", null, "Please note: the theme provider is a technical pattern used for changing it's child components' appearences. The child components used here are supposed to visualize this effect, they are not actual patterns."),
    React.createElement("hr", null),
    React.createElement("h4", null, "ThemeProvider with standard theme, no theme or override"),
    React.createElement(demo_theme_provider_with_toggle_1.DemoThemeProviderWithToggle, null,
        React.createElement(demo_container_1.DemoContainer, null,
            React.createElement(StyledDummyBox, null),
            React.createElement(text_1.Text, { tag: text_1.TextTag.p },
                demoText,
                " default"))),
    React.createElement("h4", null, "ThemeProvider with standard theme, partial overrides"),
    React.createElement(index_1.ThemeProvider, { theme: demoThemeOverride1 },
        React.createElement(StyledDemoElementContainer, null,
            React.createElement(StyledDummyBox, null),
            React.createElement("p", null,
                demoText,
                " demoThemeOverride1"))),
    React.createElement("h4", null, "ThemeProvider with multiple child elements on same level"),
    React.createElement(index_1.ThemeProvider, { theme: "main" },
        React.createElement(StyledDemoElementContainer, null,
            React.createElement(StyledDummyBox, null),
            React.createElement("p", null,
                demoText,
                " main")),
        React.createElement(StyledDemoElementContainer, null,
            React.createElement(StyledDummyBox, null),
            React.createElement("p", null,
                demoText,
                " main"))),
    React.createElement("h4", null, "Multiple nested ThemeProviders"),
    React.createElement(index_1.ThemeProvider, { theme: "main" },
        React.createElement(StyledDemoElementContainer, null,
            React.createElement(StyledDummyBox, null),
            demoText,
            " main",
            React.createElement(index_1.ThemeProvider, { theme: demoThemeOverride1 },
                React.createElement(StyledDemoElementContainer, null,
                    React.createElement(StyledDummyBox, null),
                    demoText,
                    " demoThemeOverride1",
                    React.createElement(index_1.ThemeProvider, { theme: demoThemeOverride2 },
                        React.createElement(StyledDemoElementContainer, null,
                            React.createElement(StyledDummyBox, null),
                            demoText,
                            " demoThemeOverride2")),
                    React.createElement(index_1.ThemeProvider, null,
                        React.createElement(StyledDemoElementContainer, null,
                            React.createElement(StyledDummyBox, null),
                            demoText,
                            " default")))))),
    React.createElement("h4", null, "Empty ThemeProvider: nothing is rendered"),
    React.createElement(index_1.ThemeProvider, null)));
exports.default = ThemeProviderDemo;
