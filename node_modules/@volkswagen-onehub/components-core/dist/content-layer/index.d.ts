/// <reference types="styled-components" />
import * as React from 'react';
import { ThemeDefinition } from '../theme-provider';
export declare type ContentLayerProps = React.PropsWithChildren<{
    /**
     * Indicates whether the layer instance is the currently active layer
     */
    readonly active: boolean;
    /**
     * The id of the element used to title the dialog.
     */
    readonly ariaLabelledBy?: string;
    /**
     * Reference for the element that will be able to scroll. This is needed for body-scroll-lock.
     */
    readonly scrollElementRef?: React.RefObject<HTMLDivElement> | ((el: HTMLDivElement) => void);
}>;
export interface ContentLayerPropsWithAnimation extends ContentLayerProps {
    readonly theme: ThemeDefinition;
    readonly in?: boolean;
    onExited?(): void;
}
export declare const ContentLayer: React.ForwardRefExoticComponent<Pick<ContentLayerPropsWithAnimation, "active" | "children" | "in" | "onExited" | "scrollElementRef" | "ariaLabelledBy"> & {
    theme?: any;
}>;
