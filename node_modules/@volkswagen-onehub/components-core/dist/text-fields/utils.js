"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const shared_1 = require("./shared");
exports.getColor = (props) => {
    let color;
    if (!props.theme) {
        return;
    }
    switch (props.appearance) {
        case shared_1.TextAreaAppearance.ReadOnly:
        case shared_1.TextInputAppearance.ReadOnly:
            color = props.theme.interaction.recipe100.default;
            break;
        case shared_1.TextAreaAppearance.Disabled:
        case shared_1.TextInputAppearance.Disabled:
            color = props.theme.interaction.recipe500.disabled;
            break;
        default:
            color = props.theme.interaction.recipe500.default;
    }
    return color;
};
exports.getLabelIconColor = (props) => {
    let color;
    if (!props.theme) {
        return;
    }
    switch (props.appearance) {
        case shared_1.TextAreaAppearance.ReadOnly:
        case shared_1.TextInputAppearance.ReadOnly:
            color = props.theme.interaction.recipe100.default;
            break;
        case shared_1.TextAreaAppearance.Disabled:
        case shared_1.TextInputAppearance.Disabled:
            color = props.theme.interaction.recipe500.disabled;
            break;
        case shared_1.TextAreaAppearance.Search:
        case shared_1.TextInputAppearance.Search:
            color = props.theme.interaction.recipe400.default;
            break;
        default:
            color = props.theme.interaction.recipe500.default;
    }
    return color;
};
exports.getStatusColor = (props) => {
    let color;
    if (!props.theme) {
        return;
    }
    switch (props.appearance) {
        case shared_1.TextAreaAppearance.Error:
        case shared_1.TextInputAppearance.Error:
            color = props.theme.interaction.recipe360.default;
            break;
        case shared_1.TextAreaAppearance.Disabled:
        case shared_1.TextInputAppearance.Disabled:
            color = props.theme.interaction.recipe150.disabled;
            break;
        default:
            color = props.theme.interaction.recipe150.default;
    }
    return color;
};
