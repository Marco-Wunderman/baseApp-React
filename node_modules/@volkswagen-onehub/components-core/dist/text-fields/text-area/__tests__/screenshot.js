"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const React = __importStar(require("react"));
const react_screenshot_test_1 = require("react-screenshot-test");
const demo_1 = require("../../../demo");
const theme_provider_1 = require("../../../theme-provider");
const index_1 = require("../index");
const shared_1 = require("../../shared");
const blurred_png_1 = __importDefault(require("../../../../static/component-files/demo/blurred.png"));
react_screenshot_test_1.ReactScreenshotTest.create('Text area')
    .viewport('Desktop', {
    width: 1024,
    height: 768
})
    .shoot('Main: default style', React.createElement(demo_1.DemoRoot, null,
    React.createElement(theme_provider_1.ThemeProvider, null,
        React.createElement(demo_1.DemoContainer, null,
            React.createElement(index_1.TextArea, { appearance: shared_1.TextAreaAppearance.Default, label: "Please tell us your opinion", placeholder: "Please tell us your opinion" })))))
    .shoot('Main: with floating label', React.createElement(demo_1.DemoRoot, null,
    React.createElement(theme_provider_1.ThemeProvider, null,
        React.createElement(demo_1.DemoContainer, null,
            React.createElement(index_1.TextArea, { appearance: shared_1.TextAreaAppearance.Default, label: "Please tell us your opinion", isFloating: true })))))
    .shoot('Inverted: default style', React.createElement(demo_1.DemoRoot, null,
    React.createElement(theme_provider_1.ThemeProvider, { theme: "inverted" },
        React.createElement(demo_1.DemoContainer, null,
            React.createElement(index_1.TextArea, { appearance: shared_1.TextAreaAppearance.Default, label: "Please tell us your opinion", placeholder: "Please tell us your opinion" })))))
    .shoot('Inverted: with floating label', React.createElement(demo_1.DemoRoot, null,
    React.createElement(theme_provider_1.ThemeProvider, { theme: "inverted" },
        React.createElement(demo_1.DemoContainer, null,
            React.createElement(index_1.TextArea, { appearance: shared_1.TextAreaAppearance.Default, label: "Please tell us your opinion", isFloating: true })))))
    .shoot('Image: default style', React.createElement(demo_1.DemoRoot, null,
    React.createElement(theme_provider_1.ThemeProvider, { theme: "image" },
        React.createElement(demo_1.DemoContainer, { backgroundImage: blurred_png_1.default },
            React.createElement(index_1.TextArea, { appearance: shared_1.TextAreaAppearance.Default, label: "Please tell us your opinion", placeholder: "Please tell us your opinion" })))))
    .shoot('Image: with floating label', React.createElement(demo_1.DemoRoot, null,
    React.createElement(theme_provider_1.ThemeProvider, { theme: "image" },
        React.createElement(demo_1.DemoContainer, { backgroundImage: blurred_png_1.default },
            React.createElement(index_1.TextArea, { appearance: shared_1.TextAreaAppearance.Default, label: "Please tell us your opinion", isFloating: true })))))
    .shoot('Main: invalid style', React.createElement(demo_1.DemoRoot, null,
    React.createElement(theme_provider_1.ThemeProvider, null,
        React.createElement(demo_1.DemoContainer, null,
            React.createElement(index_1.TextArea, { appearance: shared_1.TextAreaAppearance.Error, label: "Please tell us your opinion", value: "Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At v", onChange: () => { } })))))
    .shoot('Main: disabled style', React.createElement(demo_1.DemoRoot, null,
    React.createElement(theme_provider_1.ThemeProvider, null,
        React.createElement(demo_1.DemoContainer, null,
            React.createElement(index_1.TextArea, { appearance: shared_1.TextAreaAppearance.Disabled, label: "Please tell us your opinion" })))))
    .shoot('Main: readonly style', React.createElement(demo_1.DemoRoot, null,
    React.createElement(theme_provider_1.ThemeProvider, null,
        React.createElement(demo_1.DemoContainer, null,
            React.createElement(index_1.TextArea, { appearance: shared_1.TextAreaAppearance.ReadOnly, label: "Please tell us your opinion", value: "Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At v", onChange: () => { } })))))
    .shoot('Main: required style', React.createElement(demo_1.DemoRoot, null,
    React.createElement(theme_provider_1.ThemeProvider, null,
        React.createElement(demo_1.DemoContainer, null,
            React.createElement(index_1.TextArea, { appearance: shared_1.TextAreaAppearance.Default, label: "Please tell us your opinion", placeholder: "Please tell us your opinion", value: "Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At ve", required: true, onChange: () => { } })))))
    .shoot('Main: with character counter', React.createElement(demo_1.DemoRoot, null,
    React.createElement(theme_provider_1.ThemeProvider, null,
        React.createElement(demo_1.DemoContainer, null,
            React.createElement(index_1.TextArea, { appearance: shared_1.TextAreaAppearance.Default, label: "Please tell us your opinion", value: "Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At v", maxLength: 16, rows: 2, onChange: () => { } })))))
    .shoot('Main: with multiple rows', React.createElement(demo_1.DemoRoot, null,
    React.createElement(theme_provider_1.ThemeProvider, null,
        React.createElement(demo_1.DemoContainer, null,
            React.createElement(index_1.TextArea, { appearance: shared_1.TextAreaAppearance.Default, label: "Please tell us your opinion", value: "Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At v\n\t\t\t\t\tLorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At v\n\t\t\t\t\tLorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At v\n\t\t\t\t\tLorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At v\n\t\t\t\t\tLorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At v", rows: 3, onChange: () => { } })))))
    .run();
