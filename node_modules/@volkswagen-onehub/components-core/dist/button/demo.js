"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const React = __importStar(require("react"));
const container_1 = require("../container");
const demo_container_1 = require("../demo/demo-container");
const demo_root_1 = require("../demo/demo-root");
const helpers_1 = require("../helpers");
const layout_1 = require("../layout");
const text_1 = require("../text");
const theme_provider_1 = require("../theme-provider");
const index_1 = require("./index");
const threeColumnLayout = {
    [helpers_1.Breakpoints.default]: [
        { name: 'a', columns: 24 },
        { name: 'b', columns: 24 },
        { name: 'c', columns: 24 }
    ],
    [helpers_1.Breakpoints.tablet]: [
        { name: 'a', columns: 8 },
        { name: 'b', columns: 8 },
        { name: 'c', columns: 8 }
    ]
};
const ButtonDemo = () => (React.createElement(demo_root_1.DemoRoot, null,
    React.createElement(theme_provider_1.ThemeProvider, null,
        React.createElement(text_1.Text, { appearance: text_1.TextAppearance.headline350 }, "Button"),
        React.createElement(text_1.Text, { appearance: text_1.TextAppearance.headline350 }, "\u00A0"),
        React.createElement(text_1.Text, { appearance: text_1.TextAppearance.headline250, bold: true }, "Primary button"),
        React.createElement(layout_1.Layout, { appearance: threeColumnLayout },
            React.createElement(demo_container_1.DemoContainer, null,
                React.createElement(container_1.Container, { gutter: container_1.ContainerGutter.static100, padding: container_1.ContainerPadding.static200, stretchContent: true },
                    React.createElement(text_1.Text, { appearance: text_1.TextAppearance.copy200 }, "default"),
                    React.createElement(index_1.Button, { appearance: index_1.ButtonAppearance.Primary, onClick: () => {
                            window.alert('more');
                        } },
                        React.createElement(text_1.Text, { color: text_1.TextColor.inherit, appearance: text_1.TextAppearance.copy150 }, "Show more"))),
                React.createElement(container_1.Container, { gutter: container_1.ContainerGutter.static100, padding: container_1.ContainerPadding.static200, stretchContent: true },
                    React.createElement(text_1.Text, { appearance: text_1.TextAppearance.copy200 }, "disabled"),
                    React.createElement(index_1.Button, { appearance: index_1.ButtonAppearance.Primary, disabled: true, onClick: () => {
                            window.alert('more');
                        } },
                        React.createElement(text_1.Text, { color: text_1.TextColor.inherit, appearance: text_1.TextAppearance.copy150 }, "Show more")))),
            React.createElement(theme_provider_1.ThemeProvider, { theme: "inverted" },
                React.createElement(demo_container_1.DemoContainer, null,
                    React.createElement(container_1.Container, { gutter: container_1.ContainerGutter.static100, padding: container_1.ContainerPadding.static200, stretchContent: true },
                        React.createElement(text_1.Text, { appearance: text_1.TextAppearance.copy200 }, "default"),
                        React.createElement(index_1.Button, { appearance: index_1.ButtonAppearance.Primary, onClick: () => {
                                window.alert('more');
                            } },
                            React.createElement(text_1.Text, { color: text_1.TextColor.inherit, appearance: text_1.TextAppearance.copy150 }, "Show more"))),
                    React.createElement(container_1.Container, { gutter: container_1.ContainerGutter.static100, padding: container_1.ContainerPadding.static200, stretchContent: true },
                        React.createElement(text_1.Text, { appearance: text_1.TextAppearance.copy200 }, "disabled"),
                        React.createElement(index_1.Button, { appearance: index_1.ButtonAppearance.Primary, disabled: true, onClick: () => {
                                window.alert('more');
                            } },
                            React.createElement(text_1.Text, { color: text_1.TextColor.inherit, appearance: text_1.TextAppearance.copy150 }, "Show more"))))),
            React.createElement(theme_provider_1.ThemeProvider, { theme: "image" },
                React.createElement(demo_container_1.DemoContainer, { hasBackgroundImage: true },
                    React.createElement(container_1.Container, { gutter: container_1.ContainerGutter.static100, padding: container_1.ContainerPadding.static200, stretchContent: true },
                        React.createElement(text_1.Text, { appearance: text_1.TextAppearance.copy200 }, "default"),
                        React.createElement(index_1.Button, { appearance: index_1.ButtonAppearance.Primary, onClick: () => {
                                window.alert('more');
                            } },
                            React.createElement(text_1.Text, { color: text_1.TextColor.inherit, appearance: text_1.TextAppearance.copy150 }, "Show more"))),
                    React.createElement(container_1.Container, { gutter: container_1.ContainerGutter.static100, padding: container_1.ContainerPadding.static200, stretchContent: true },
                        React.createElement(text_1.Text, { appearance: text_1.TextAppearance.copy200 }, "disabled"),
                        React.createElement(index_1.Button, { appearance: index_1.ButtonAppearance.Primary, disabled: true, onClick: () => {
                                window.alert('more');
                            } },
                            React.createElement(text_1.Text, { color: text_1.TextColor.inherit, appearance: text_1.TextAppearance.copy150 }, "Show more")))))),
        React.createElement(text_1.Text, { appearance: text_1.TextAppearance.headline250, bold: true }, "Secondary button"),
        React.createElement(layout_1.Layout, { appearance: threeColumnLayout },
            React.createElement(demo_container_1.DemoContainer, null,
                React.createElement(container_1.Container, { gutter: container_1.ContainerGutter.static100, padding: container_1.ContainerPadding.static200, stretchContent: true },
                    React.createElement(text_1.Text, { appearance: text_1.TextAppearance.copy200 }, "default"),
                    React.createElement(index_1.Button, { appearance: index_1.ButtonAppearance.Secondary, onClick: () => {
                            window.alert('more');
                        } },
                        React.createElement(text_1.Text, { color: text_1.TextColor.inherit, appearance: text_1.TextAppearance.copy150 }, "Show more"))),
                React.createElement(container_1.Container, { gutter: container_1.ContainerGutter.static100, padding: container_1.ContainerPadding.static200, stretchContent: true },
                    React.createElement(text_1.Text, { appearance: text_1.TextAppearance.copy200 }, "disabled"),
                    React.createElement(index_1.Button, { appearance: index_1.ButtonAppearance.Secondary, disabled: true, onClick: () => {
                            window.alert('more');
                        } },
                        React.createElement(text_1.Text, { color: text_1.TextColor.inherit, appearance: text_1.TextAppearance.copy150 }, "Show more")))),
            React.createElement(theme_provider_1.ThemeProvider, { theme: "inverted" },
                React.createElement(demo_container_1.DemoContainer, null,
                    React.createElement(container_1.Container, { gutter: container_1.ContainerGutter.static100, padding: container_1.ContainerPadding.static200, stretchContent: true },
                        React.createElement(text_1.Text, { appearance: text_1.TextAppearance.copy200 }, "default"),
                        React.createElement(index_1.Button, { appearance: index_1.ButtonAppearance.Secondary, onClick: () => {
                                window.alert('more');
                            } },
                            React.createElement(text_1.Text, { color: text_1.TextColor.inherit, appearance: text_1.TextAppearance.copy150 }, "Show more"))),
                    React.createElement(container_1.Container, { gutter: container_1.ContainerGutter.static100, padding: container_1.ContainerPadding.static200, stretchContent: true },
                        React.createElement(text_1.Text, { appearance: text_1.TextAppearance.copy200 }, "disabled"),
                        React.createElement(index_1.Button, { appearance: index_1.ButtonAppearance.Secondary, disabled: true, onClick: () => {
                                window.alert('more');
                            } },
                            React.createElement(text_1.Text, { color: text_1.TextColor.inherit, appearance: text_1.TextAppearance.copy150 }, "Show more"))))),
            React.createElement(theme_provider_1.ThemeProvider, { theme: "image" },
                React.createElement(demo_container_1.DemoContainer, { hasBackgroundImage: true },
                    React.createElement(container_1.Container, { gutter: container_1.ContainerGutter.static100, padding: container_1.ContainerPadding.static200, stretchContent: true },
                        React.createElement(text_1.Text, { appearance: text_1.TextAppearance.copy200 }, "default"),
                        React.createElement(index_1.Button, { appearance: index_1.ButtonAppearance.Secondary, onClick: () => {
                                window.alert('more');
                            } },
                            React.createElement(text_1.Text, { color: text_1.TextColor.inherit, appearance: text_1.TextAppearance.copy150 }, "Show more"))),
                    React.createElement(container_1.Container, { gutter: container_1.ContainerGutter.static100, padding: container_1.ContainerPadding.static200, stretchContent: true },
                        React.createElement(text_1.Text, { appearance: text_1.TextAppearance.copy200 }, "disabled"),
                        React.createElement(index_1.Button, { appearance: index_1.ButtonAppearance.Secondary, disabled: true, onClick: () => {
                                window.alert('more');
                            } },
                            React.createElement(text_1.Text, { color: text_1.TextColor.inherit, appearance: text_1.TextAppearance.copy150 }, "Show more")))))),
        React.createElement(text_1.Text, { appearance: text_1.TextAppearance.headline350 }, "ButtonLink"),
        React.createElement(text_1.Text, { appearance: text_1.TextAppearance.headline350 }, "\u00A0"),
        React.createElement(text_1.Text, { appearance: text_1.TextAppearance.headline250, bold: true }, "Primary button link"),
        React.createElement(layout_1.Layout, { appearance: threeColumnLayout },
            React.createElement(demo_container_1.DemoContainer, null,
                React.createElement(container_1.Container, { gutter: container_1.ContainerGutter.static100, padding: container_1.ContainerPadding.static200, stretchContent: true },
                    React.createElement(text_1.Text, { appearance: text_1.TextAppearance.copy200 }, "default"),
                    React.createElement(index_1.ButtonLink, { appearance: index_1.ButtonAppearance.Primary, href: '#' },
                        React.createElement(text_1.Text, { color: text_1.TextColor.inherit, appearance: text_1.TextAppearance.copy150 }, "Show more"))),
                React.createElement(container_1.Container, { gutter: container_1.ContainerGutter.static100, padding: container_1.ContainerPadding.static200, stretchContent: true },
                    React.createElement(text_1.Text, { appearance: text_1.TextAppearance.copy200 }, "disabled"),
                    React.createElement(index_1.ButtonLink, { appearance: index_1.ButtonAppearance.Primary, disabled: true, href: '#' },
                        React.createElement(text_1.Text, { color: text_1.TextColor.inherit, appearance: text_1.TextAppearance.copy150 }, "Show more")))),
            React.createElement(theme_provider_1.ThemeProvider, { theme: "inverted" },
                React.createElement(demo_container_1.DemoContainer, null,
                    React.createElement(container_1.Container, { gutter: container_1.ContainerGutter.static100, padding: container_1.ContainerPadding.static200, stretchContent: true },
                        React.createElement(text_1.Text, { appearance: text_1.TextAppearance.copy200 }, "default"),
                        React.createElement(index_1.ButtonLink, { appearance: index_1.ButtonAppearance.Primary, href: '#' },
                            React.createElement(text_1.Text, { color: text_1.TextColor.inherit, appearance: text_1.TextAppearance.copy150 }, "Show more"))),
                    React.createElement(container_1.Container, { gutter: container_1.ContainerGutter.static100, padding: container_1.ContainerPadding.static200, stretchContent: true },
                        React.createElement(text_1.Text, { appearance: text_1.TextAppearance.copy200 }, "disabled"),
                        React.createElement(index_1.ButtonLink, { appearance: index_1.ButtonAppearance.Primary, disabled: true, href: '#' },
                            React.createElement(text_1.Text, { color: text_1.TextColor.inherit, appearance: text_1.TextAppearance.copy150 }, "Show more"))))),
            React.createElement(theme_provider_1.ThemeProvider, { theme: "image" },
                React.createElement(demo_container_1.DemoContainer, { hasBackgroundImage: true },
                    React.createElement(container_1.Container, { gutter: container_1.ContainerGutter.static100, padding: container_1.ContainerPadding.static200, stretchContent: true },
                        React.createElement(text_1.Text, { appearance: text_1.TextAppearance.copy200 }, "default"),
                        React.createElement(index_1.ButtonLink, { appearance: index_1.ButtonAppearance.Primary, href: '#' },
                            React.createElement(text_1.Text, { color: text_1.TextColor.inherit, appearance: text_1.TextAppearance.copy150 }, "Show more"))),
                    React.createElement(container_1.Container, { gutter: container_1.ContainerGutter.static100, padding: container_1.ContainerPadding.static200, stretchContent: true },
                        React.createElement(text_1.Text, { appearance: text_1.TextAppearance.copy200 }, "disabled"),
                        React.createElement(index_1.ButtonLink, { appearance: index_1.ButtonAppearance.Primary, disabled: true, href: '#' },
                            React.createElement(text_1.Text, { color: text_1.TextColor.inherit, appearance: text_1.TextAppearance.copy150 }, "Show more")))))),
        React.createElement(text_1.Text, { appearance: text_1.TextAppearance.headline250, bold: true }, "Secondary button link"),
        React.createElement(layout_1.Layout, { appearance: threeColumnLayout },
            React.createElement(demo_container_1.DemoContainer, null,
                React.createElement(container_1.Container, { gutter: container_1.ContainerGutter.static100, padding: container_1.ContainerPadding.static200, stretchContent: true },
                    React.createElement(text_1.Text, { appearance: text_1.TextAppearance.copy200 }, "default"),
                    React.createElement(index_1.ButtonLink, { appearance: index_1.ButtonAppearance.Secondary, href: '#' },
                        React.createElement(text_1.Text, { color: text_1.TextColor.inherit, appearance: text_1.TextAppearance.copy150 }, "Show more"))),
                React.createElement(container_1.Container, { gutter: container_1.ContainerGutter.static100, padding: container_1.ContainerPadding.static200, stretchContent: true },
                    React.createElement(text_1.Text, { appearance: text_1.TextAppearance.copy200 }, "disabled"),
                    React.createElement(index_1.ButtonLink, { appearance: index_1.ButtonAppearance.Secondary, disabled: true, href: '#' },
                        React.createElement(text_1.Text, { color: text_1.TextColor.inherit, appearance: text_1.TextAppearance.copy150 }, "Show more")))),
            React.createElement(theme_provider_1.ThemeProvider, { theme: "inverted" },
                React.createElement(demo_container_1.DemoContainer, null,
                    React.createElement(container_1.Container, { gutter: container_1.ContainerGutter.static100, padding: container_1.ContainerPadding.static200, stretchContent: true },
                        React.createElement(text_1.Text, { appearance: text_1.TextAppearance.copy200 }, "default"),
                        React.createElement(index_1.ButtonLink, { appearance: index_1.ButtonAppearance.Secondary, href: '#' },
                            React.createElement(text_1.Text, { color: text_1.TextColor.inherit, appearance: text_1.TextAppearance.copy150 }, "Show more"))),
                    React.createElement(container_1.Container, { gutter: container_1.ContainerGutter.static100, padding: container_1.ContainerPadding.static200, stretchContent: true },
                        React.createElement(text_1.Text, { appearance: text_1.TextAppearance.copy200 }, "disabled"),
                        React.createElement(index_1.ButtonLink, { appearance: index_1.ButtonAppearance.Secondary, disabled: true, href: '#' },
                            React.createElement(text_1.Text, { color: text_1.TextColor.inherit, appearance: text_1.TextAppearance.copy150 }, "Show more"))))),
            React.createElement(theme_provider_1.ThemeProvider, { theme: "image" },
                React.createElement(demo_container_1.DemoContainer, { hasBackgroundImage: true },
                    React.createElement(container_1.Container, { gutter: container_1.ContainerGutter.static100, padding: container_1.ContainerPadding.static200, stretchContent: true },
                        React.createElement(text_1.Text, { appearance: text_1.TextAppearance.copy200 }, "default"),
                        React.createElement(index_1.ButtonLink, { appearance: index_1.ButtonAppearance.Secondary, href: '#' },
                            React.createElement(text_1.Text, { color: text_1.TextColor.inherit, appearance: text_1.TextAppearance.copy150 }, "Show more"))),
                    React.createElement(container_1.Container, { gutter: container_1.ContainerGutter.static100, padding: container_1.ContainerPadding.static200, stretchContent: true },
                        React.createElement(text_1.Text, { appearance: text_1.TextAppearance.copy200 }, "disabled"),
                        React.createElement(index_1.ButtonLink, { appearance: index_1.ButtonAppearance.Secondary, disabled: true, href: '#' },
                            React.createElement(text_1.Text, { color: text_1.TextColor.inherit, appearance: text_1.TextAppearance.copy150 }, "Show more")))))),
        React.createElement(text_1.Text, { appearance: text_1.TextAppearance.headline250, bold: true }, "Stretched Button"),
        React.createElement(layout_1.Layout, { appearance: threeColumnLayout },
            React.createElement(demo_container_1.DemoContainer, null,
                React.createElement(container_1.Container, { gutter: container_1.ContainerGutter.static100, padding: container_1.ContainerPadding.static200, stretchContent: true },
                    React.createElement(text_1.Text, { appearance: text_1.TextAppearance.copy200 }, "default"),
                    React.createElement(index_1.Button, { appearance: index_1.ButtonAppearance.Primary, onClick: () => {
                            window.alert('more');
                        }, stretchContent: true },
                        React.createElement(text_1.Text, { color: text_1.TextColor.inherit, appearance: text_1.TextAppearance.copy150 }, "Show more"))))),
        React.createElement(text_1.Text, { appearance: text_1.TextAppearance.headline250, bold: true }, "Stretched ButtonLink"),
        React.createElement(layout_1.Layout, { appearance: threeColumnLayout },
            React.createElement(demo_container_1.DemoContainer, null,
                React.createElement(container_1.Container, { gutter: container_1.ContainerGutter.static100, padding: container_1.ContainerPadding.static200, stretchContent: true },
                    React.createElement(text_1.Text, { appearance: text_1.TextAppearance.copy200 }, "default"),
                    React.createElement(index_1.ButtonLink, { appearance: index_1.ButtonAppearance.Primary, onClick: () => {
                            window.alert('more');
                        }, stretchContent: true },
                        React.createElement(text_1.Text, { color: text_1.TextColor.inherit, appearance: text_1.TextAppearance.copy150 }, "Show more"))))))));
exports.default = ButtonDemo;
