import * as React from 'react';
interface DOMNodeExposerProps {
    name: string;
    children: JSX.Element;
}
interface DOMNodeExposerState {
    elementReference: ElementReference;
}
interface ElementReference {
    domNode: Element | Text | null;
    containedRefs: {
        [name: string]: ElementReference[];
    };
}
export declare type ExtendedWindow = Window & {
    elementRefs?: {
        [name: string]: ElementReference[];
    };
};
export declare class DOMNodeExposer extends React.Component<DOMNodeExposerProps, DOMNodeExposerState> {
    private linkWithOtherElements;
    private unlinkFromOtherElements;
    componentDidMount(): void;
    componentWillUnmount(): void;
    componentDidUpdate(): void;
    render(): JSX.Element;
}
export {};
