"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const React = __importStar(require("react"));
const Fade_1 = __importDefault(require("react-reveal/Fade"));
const styled_components_1 = require("styled-components");
const container_1 = require("../container");
const helpers_1 = require("../helpers");
const text_1 = require("../text");
const theme_provider_1 = require("../theme-provider");
const icons_core_1 = require("@volkswagen-onehub/icons-core");
const animationDuration = 300;
const StyledNavigationLevelList = theme_provider_1.styled.div.withConfig({ displayName: "StyledNavigationLevelList", componentId: "sc-ju1w4n" }) `
	position: relative;
	padding-bottom: ${props => props.theme.size.static150};
`;
const StyledNavigationLevelListItem = theme_provider_1.styled.div.withConfig({ displayName: "StyledNavigationLevelListItem", componentId: "sc-kdwnmt" }) `
	:not(:first-child) {
		margin-top: ${props => props.theme.size.dynamic0100};
	}

	@media (min-width: ${helpers_1.Breakpoints.b560}px) {
		display: grid;
		grid-column-gap: 1em;
		grid-template-columns: 1fr 1fr;
	}
`;
const StyledIcon = theme_provider_1.styled(icons_core_1.ChevronDown).withConfig({ displayName: "StyledIcon", componentId: "sc-43lik5" }) `
	color: ${props => props.theme.interaction.recipe400.default};
	transition: transform ${animationDuration}ms ease;
	transform: ${props => (props.isOpen ? 'rotateX(180deg)' : 'rotateX(0)')};
	transform-origin: 50% 50%;

	@media (min-width: ${helpers_1.Breakpoints.b560}px) {
		transform: rotateZ(-90deg);
	}
`;
const StyledText = theme_provider_1.styled.div.withConfig({ displayName: "StyledText", componentId: "sc-1usxyke" }) `
	position: relative;

	::after {
		content: '';
		display: block;
		position: absolute;
		width: 0;
		height: 1px;
		margin-top: ${props => props.theme.size.static100};
		background: ${props => props.theme.interaction.recipe400.checked};
		transition: width ${animationDuration}ms ease;
	}

	${props => props.isOpen &&
    `
			::after {
				width: 100%;
			}
		`};
`;
const LinkStyle = styled_components_1.css `
	display: block;
	text-decoration: none;
	color: inherit;
	cursor: pointer;
	-webkit-tap-highlight-color: transparent;

	@media (hover: hover) {
		&:hover {
			color: ${props => props.theme.interaction.recipe100.hover};

			${StyledIcon} {
				color: ${props => props.theme.interaction.recipe100.hover};
			}
		}
	}

	:focus {
		outline: 0;
		color: ${props => props.theme.interaction.recipe100.hover};

		${StyledIcon} {
			color: ${props => props.theme.interaction.recipe100.hover};
		}
	}

	${props => props.isOpen &&
    styled_components_1.css `
			@media (hover: hover) {
				color: ${props.theme.interaction.recipe100.checked};

				${StyledIcon} {
					color: ${props.theme.interaction.recipe100.checked};
				}

				&:hover,
				&:focus {
					color: ${props.theme.interaction.recipe100.checked};

					${StyledIcon} {
						color: ${props.theme.interaction.recipe100.checked};
					}
				}
			}
		`};
`;
const StyledLink = theme_provider_1.styled.a.withConfig({ displayName: "StyledLink", componentId: "sc-1qpvfum" }) `
	${LinkStyle}
`;
const StyledButton = theme_provider_1.styled.button.withConfig({ displayName: "StyledButton", componentId: "sc-1p7ikll" }) `
	${LinkStyle}

	border: 0;
	padding: 0;
	width: 100%;
	background: transparent;
`;
const StyledSecondLevelList = theme_provider_1.styled.div.withConfig({ displayName: "StyledSecondLevelList", componentId: "sc-1rmprda" }) `
	${props => props.isOpen &&
    styled_components_1.css `
			padding: 0 ${props.theme.size.grid001} ${props.theme.size.dynamic0100};
		`};

	${StyledLink} {
		display: inline-block;
		margin-top: ${props => props.theme.size.dynamic0100};
	}

	@media (min-width: ${helpers_1.Breakpoints.b560}px) {
		position: absolute;
		top: 0;
		padding: 0;

		${StyledLink} {
			:first-child {
				margin-top: 0;
			}
		}
	}
`;
const StyledSecondLevelListInner = theme_provider_1.styled.div.withConfig({ displayName: "StyledSecondLevelListInner", componentId: "sc-8nshfb" }) `
	display: flex;
	flex-direction: column;
`;
exports.NavigationLevelListItem = props => {
    const { id, isOpen = false, name, url, subItems, onClick } = props;
    const firstLevelId = `${id}_firstlevel`;
    const secondLevelId = `${id}_secondlevel`;
    return (React.createElement(StyledNavigationLevelListItem, { id: id },
        React.createElement("div", null, subItems ? (React.createElement(StyledButton, { id: firstLevelId, isOpen: isOpen, onClick: onClick, "aria-expanded": isOpen, "aria-controls": secondLevelId },
            React.createElement(container_1.Container, { wrap: container_1.ContainerWrap.never, horizontalAlign: container_1.ContainerHorizontalAlignment.spaceBetween, verticalAlign: container_1.ContainerVerticalAlignment.center, gutter: container_1.ContainerGutter.grid001 },
                React.createElement(StyledText, { isOpen: isOpen },
                    React.createElement(text_1.Text, { color: text_1.TextColor.inherit, appearance: text_1.TextAppearance.headline0250 }, name)),
                React.createElement(StyledIcon, { isOpen: isOpen, variant: "small" })))) : (React.createElement(StyledLink, { href: url },
            React.createElement(text_1.Text, { color: text_1.TextColor.inherit, appearance: text_1.TextAppearance.headline0250 }, name)))),
        React.createElement("div", null,
            React.createElement(StyledSecondLevelList, { id: secondLevelId, isOpen: isOpen, "aria-hidden": !isOpen, "aria-labelledby": firstLevelId }, isOpen && (React.createElement(Fade_1.default, { duration: animationDuration },
                React.createElement(StyledSecondLevelListInner, null, (subItems || []).map(item => (React.createElement(StyledLink, { href: item.url, key: item.name },
                    React.createElement(text_1.Text, { color: text_1.TextColor.inherit, appearance: text_1.TextAppearance.headline0250 }, item.name)))))))))));
};
exports.NavigationLevelListItem.displayName = 'NavigationLevelListItem';
exports.NavigationLevelList = props => (React.createElement(StyledNavigationLevelList, null, props.children));
exports.NavigationLevelList.displayName = 'NavigationLevelList';
