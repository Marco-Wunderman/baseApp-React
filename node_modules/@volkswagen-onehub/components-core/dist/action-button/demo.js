"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const React = __importStar(require("react"));
const icons_core_1 = require("@volkswagen-onehub/icons-core");
const container_1 = require("../container");
const demo_1 = require("../demo");
const demo_container_1 = require("../demo/demo-container");
const demo_root_1 = require("../demo/demo-root");
const helpers_1 = require("../helpers");
const layout_1 = require("../layout");
const text_1 = require("../text");
const theme_provider_1 = require("../theme-provider");
const index_1 = require("./index");
const sampleText = (React.createElement(text_1.Text, { color: text_1.TextColor.inherit, appearance: text_1.TextAppearance.copy100 }, "Filter"));
const sampleIcon = React.createElement(icons_core_1.ChevronDown, { variant: "small" });
const threeColumnLayout = {
    [helpers_1.Breakpoints.default]: [
        { name: 'a', columns: 24 },
        { name: 'b', columns: 24 },
        { name: 'c', columns: 24 }
    ],
    [helpers_1.Breakpoints.tablet]: [
        { name: 'a', columns: 8 },
        { name: 'b', columns: 8 },
        { name: 'c', columns: 8 }
    ]
};
const ActionButtonDemo = () => (React.createElement(demo_root_1.DemoRoot, null,
    React.createElement(demo_1.DemoThemeProviderWithToggle, null,
        React.createElement(React.Fragment, null,
            React.createElement(text_1.Text, { appearance: text_1.TextAppearance.headline0350 }, "Action Button"),
            React.createElement(text_1.Text, { appearance: text_1.TextAppearance.headline0350 }, "\u00A0"),
            React.createElement(text_1.Text, { appearance: text_1.TextAppearance.headline0250, bold: true }, "Default"),
            React.createElement(layout_1.Layout, { appearance: threeColumnLayout },
                React.createElement(demo_container_1.DemoContainer, null,
                    React.createElement(container_1.Container, { gutter: container_1.ContainerGutter.static100, padding: container_1.ContainerPadding.static200, stretchContent: true },
                        React.createElement(text_1.Text, { appearance: text_1.TextAppearance.copy0200 }, "default"),
                        React.createElement(index_1.ActionButton, { icon: sampleIcon, onClick: () => {
                                window.alert('more');
                            } }, sampleText)),
                    React.createElement(container_1.Container, { gutter: container_1.ContainerGutter.static100, padding: container_1.ContainerPadding.static200, stretchContent: true },
                        React.createElement(text_1.Text, { appearance: text_1.TextAppearance.copy0200 }, "disabled"),
                        React.createElement(index_1.ActionButton, { icon: sampleIcon, disabled: true, onClick: () => {
                                window.alert('more');
                            } }, sampleText))),
                React.createElement(theme_provider_1.ThemeProvider, { theme: "inverted" },
                    React.createElement(demo_container_1.DemoContainer, null,
                        React.createElement(container_1.Container, { gutter: container_1.ContainerGutter.static100, padding: container_1.ContainerPadding.static200, stretchContent: true },
                            React.createElement(text_1.Text, { appearance: text_1.TextAppearance.copy0200 }, "default"),
                            React.createElement(index_1.ActionButton, { icon: sampleIcon, onClick: () => {
                                    window.alert('more');
                                } }, sampleText)),
                        React.createElement(container_1.Container, { gutter: container_1.ContainerGutter.static100, padding: container_1.ContainerPadding.static200, stretchContent: true },
                            React.createElement(text_1.Text, { appearance: text_1.TextAppearance.copy0200 }, "disabled"),
                            React.createElement(index_1.ActionButton, { icon: sampleIcon, disabled: true, onClick: () => {
                                    window.alert('more');
                                } }, sampleText)))),
                React.createElement(theme_provider_1.ThemeProvider, { theme: "image" },
                    React.createElement(demo_container_1.DemoContainer, { hasBackgroundImage: true },
                        React.createElement(container_1.Container, { gutter: container_1.ContainerGutter.static100, padding: container_1.ContainerPadding.static200, stretchContent: true },
                            React.createElement(text_1.Text, { appearance: text_1.TextAppearance.copy0200 }, "default"),
                            React.createElement(index_1.ActionButton, { icon: sampleIcon, onClick: () => {
                                    window.alert('more');
                                } }, sampleText)),
                        React.createElement(container_1.Container, { gutter: container_1.ContainerGutter.static100, padding: container_1.ContainerPadding.static200, stretchContent: true },
                            React.createElement(text_1.Text, { appearance: text_1.TextAppearance.copy0200 }, "disabled"),
                            React.createElement(index_1.ActionButton, { icon: sampleIcon, disabled: true, onClick: () => {
                                    window.alert('more');
                                } }, sampleText))))),
            React.createElement(text_1.Text, { appearance: text_1.TextAppearance.headline0250, bold: true }, "Reduced"),
            React.createElement(layout_1.Layout, { appearance: threeColumnLayout },
                React.createElement(demo_container_1.DemoContainer, null,
                    React.createElement(container_1.Container, { gutter: container_1.ContainerGutter.static100, padding: container_1.ContainerPadding.static200, stretchContent: true },
                        React.createElement(text_1.Text, { appearance: text_1.TextAppearance.copy0200 }, "default"),
                        React.createElement(index_1.ActionButton, { icon: sampleIcon, reduced: true, onClick: () => {
                                window.alert('more');
                            } }, sampleText)),
                    React.createElement(container_1.Container, { gutter: container_1.ContainerGutter.static100, padding: container_1.ContainerPadding.static200, stretchContent: true },
                        React.createElement(text_1.Text, { appearance: text_1.TextAppearance.copy0200 }, "disabled"),
                        React.createElement(index_1.ActionButton, { icon: sampleIcon, reduced: true, disabled: true, onClick: () => {
                                window.alert('more');
                            } }, sampleText))),
                React.createElement(theme_provider_1.ThemeProvider, { theme: "inverted" },
                    React.createElement(demo_container_1.DemoContainer, null,
                        React.createElement(container_1.Container, { gutter: container_1.ContainerGutter.static100, padding: container_1.ContainerPadding.static200, stretchContent: true },
                            React.createElement(text_1.Text, { appearance: text_1.TextAppearance.copy0200 }, "default"),
                            React.createElement(index_1.ActionButton, { icon: sampleIcon, reduced: true, onClick: () => {
                                    window.alert('more');
                                } }, sampleText)),
                        React.createElement(container_1.Container, { gutter: container_1.ContainerGutter.static100, padding: container_1.ContainerPadding.static200, stretchContent: true },
                            React.createElement(text_1.Text, { appearance: text_1.TextAppearance.copy0200 }, "disabled"),
                            React.createElement(index_1.ActionButton, { icon: sampleIcon, reduced: true, disabled: true, onClick: () => {
                                    window.alert('more');
                                } }, sampleText)))),
                React.createElement(theme_provider_1.ThemeProvider, { theme: "image" },
                    React.createElement(demo_container_1.DemoContainer, { hasBackgroundImage: true },
                        React.createElement(container_1.Container, { gutter: container_1.ContainerGutter.static100, padding: container_1.ContainerPadding.static200, stretchContent: true },
                            React.createElement(text_1.Text, { appearance: text_1.TextAppearance.copy0200 }, "default"),
                            React.createElement(index_1.ActionButton, { icon: sampleIcon, reduced: true, onClick: () => {
                                    window.alert('more');
                                } }, sampleText)),
                        React.createElement(container_1.Container, { gutter: container_1.ContainerGutter.static100, padding: container_1.ContainerPadding.static200, stretchContent: true },
                            React.createElement(text_1.Text, { appearance: text_1.TextAppearance.copy0200 }, "disabled"),
                            React.createElement(index_1.ActionButton, { icon: sampleIcon, reduced: true, disabled: true, onClick: () => {
                                    window.alert('more');
                                } }, sampleText))))),
            React.createElement(text_1.Text, { appearance: text_1.TextAppearance.headline0350 }, "Action Button Link"),
            React.createElement(text_1.Text, { appearance: text_1.TextAppearance.headline0350 }, "\u00A0"),
            React.createElement(text_1.Text, { appearance: text_1.TextAppearance.headline0250, bold: true }, "Default"),
            React.createElement(layout_1.Layout, { appearance: threeColumnLayout },
                React.createElement(demo_container_1.DemoContainer, null,
                    React.createElement(container_1.Container, { gutter: container_1.ContainerGutter.static100, padding: container_1.ContainerPadding.static200, stretchContent: true },
                        React.createElement(text_1.Text, { appearance: text_1.TextAppearance.copy0200 }, "default"),
                        React.createElement(index_1.ActionButtonLink, { href: "#", icon: sampleIcon, onClick: () => {
                                window.alert('more');
                            } }, sampleText)),
                    React.createElement(container_1.Container, { gutter: container_1.ContainerGutter.static100, padding: container_1.ContainerPadding.static200, stretchContent: true },
                        React.createElement(text_1.Text, { appearance: text_1.TextAppearance.copy0200 }, "disabled"),
                        React.createElement(index_1.ActionButtonLink, { href: "#", icon: sampleIcon, disabled: true, onClick: () => {
                                window.alert('more');
                            } }, sampleText))),
                React.createElement(theme_provider_1.ThemeProvider, { theme: "inverted" },
                    React.createElement(demo_container_1.DemoContainer, null,
                        React.createElement(container_1.Container, { gutter: container_1.ContainerGutter.static100, padding: container_1.ContainerPadding.static200, stretchContent: true },
                            React.createElement(text_1.Text, { appearance: text_1.TextAppearance.copy0200 }, "default"),
                            React.createElement(index_1.ActionButtonLink, { href: "#", icon: sampleIcon, onClick: () => {
                                    window.alert('more');
                                } }, sampleText)),
                        React.createElement(container_1.Container, { gutter: container_1.ContainerGutter.static100, padding: container_1.ContainerPadding.static200, stretchContent: true },
                            React.createElement(text_1.Text, { appearance: text_1.TextAppearance.copy0200 }, "disabled"),
                            React.createElement(index_1.ActionButtonLink, { href: "#", icon: sampleIcon, disabled: true, onClick: () => {
                                    window.alert('more');
                                } }, sampleText)))),
                React.createElement(theme_provider_1.ThemeProvider, { theme: "image" },
                    React.createElement(demo_container_1.DemoContainer, { hasBackgroundImage: true },
                        React.createElement(container_1.Container, { gutter: container_1.ContainerGutter.static100, padding: container_1.ContainerPadding.static200, stretchContent: true },
                            React.createElement(text_1.Text, { appearance: text_1.TextAppearance.copy0200 }, "default"),
                            React.createElement(index_1.ActionButtonLink, { href: "#", icon: sampleIcon, onClick: () => {
                                    window.alert('more');
                                } }, sampleText)),
                        React.createElement(container_1.Container, { gutter: container_1.ContainerGutter.static100, padding: container_1.ContainerPadding.static200, stretchContent: true },
                            React.createElement(text_1.Text, { appearance: text_1.TextAppearance.copy0200 }, "disabled"),
                            React.createElement(index_1.ActionButtonLink, { href: "#", icon: sampleIcon, disabled: true, onClick: () => {
                                    window.alert('more');
                                } }, sampleText))))),
            React.createElement(text_1.Text, { appearance: text_1.TextAppearance.headline0250, bold: true }, "Reduced"),
            React.createElement(layout_1.Layout, { appearance: threeColumnLayout },
                React.createElement(demo_container_1.DemoContainer, null,
                    React.createElement(container_1.Container, { gutter: container_1.ContainerGutter.static100, padding: container_1.ContainerPadding.static200, stretchContent: true },
                        React.createElement(text_1.Text, { appearance: text_1.TextAppearance.copy0200 }, "default"),
                        React.createElement(index_1.ActionButtonLink, { href: "#", icon: sampleIcon, reduced: true, onClick: () => {
                                window.alert('more');
                            } }, sampleText)),
                    React.createElement(container_1.Container, { gutter: container_1.ContainerGutter.static100, padding: container_1.ContainerPadding.static200, stretchContent: true },
                        React.createElement(text_1.Text, { appearance: text_1.TextAppearance.copy0200 }, "disabled"),
                        React.createElement(index_1.ActionButtonLink, { href: "#", icon: sampleIcon, reduced: true, disabled: true, onClick: () => {
                                window.alert('more');
                            } }, sampleText))),
                React.createElement(theme_provider_1.ThemeProvider, { theme: "inverted" },
                    React.createElement(demo_container_1.DemoContainer, null,
                        React.createElement(container_1.Container, { gutter: container_1.ContainerGutter.static100, padding: container_1.ContainerPadding.static200, stretchContent: true },
                            React.createElement(text_1.Text, { appearance: text_1.TextAppearance.copy0200 }, "default"),
                            React.createElement(index_1.ActionButtonLink, { href: "#", icon: sampleIcon, reduced: true, onClick: () => {
                                    window.alert('more');
                                } }, sampleText)),
                        React.createElement(container_1.Container, { gutter: container_1.ContainerGutter.static100, padding: container_1.ContainerPadding.static200, stretchContent: true },
                            React.createElement(text_1.Text, { appearance: text_1.TextAppearance.copy0200 }, "disabled"),
                            React.createElement(index_1.ActionButtonLink, { href: "#", icon: sampleIcon, reduced: true, disabled: true, onClick: () => {
                                    window.alert('more');
                                } }, sampleText)))),
                React.createElement(theme_provider_1.ThemeProvider, { theme: "image" },
                    React.createElement(demo_container_1.DemoContainer, { hasBackgroundImage: true },
                        React.createElement(container_1.Container, { gutter: container_1.ContainerGutter.static100, padding: container_1.ContainerPadding.static200, stretchContent: true },
                            React.createElement(text_1.Text, { appearance: text_1.TextAppearance.copy0200 }, "default"),
                            React.createElement(index_1.ActionButtonLink, { href: "#", icon: sampleIcon, reduced: true, onClick: () => {
                                    window.alert('more');
                                } }, sampleText)),
                        React.createElement(container_1.Container, { gutter: container_1.ContainerGutter.static100, padding: container_1.ContainerPadding.static200, stretchContent: true },
                            React.createElement(text_1.Text, { appearance: text_1.TextAppearance.copy0200 }, "disabled"),
                            React.createElement(index_1.ActionButtonLink, { href: "#", icon: sampleIcon, reduced: true, disabled: true, onClick: () => {
                                    window.alert('more');
                                } }, sampleText)))))))));
exports.default = ActionButtonDemo;
