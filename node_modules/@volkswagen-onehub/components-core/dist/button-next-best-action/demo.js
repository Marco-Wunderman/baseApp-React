"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const React = __importStar(require("react"));
const icons_core_1 = require("@volkswagen-onehub/icons-core");
const demo_root_1 = require("../demo/demo-root");
const text_1 = require("../text");
const theme_provider_1 = require("../theme-provider");
const demo_1 = require("../demo");
const index_1 = require("./index");
const NBAWrapper = theme_provider_1.styled.div.withConfig({ displayName: "NBAWrapper", componentId: "sc-1vf1s7" }) `
	padding: 0 2em;
`;
const icons = [
    React.createElement(icons_core_1.AirConditioning, { key: "AirConditioning" }),
    React.createElement(icons_core_1.Bin, { key: "Bin" }),
    React.createElement(icons_core_1.CertifiedRepair, { key: "CertifiedRepair" })
];
class NextBestActionButtonDemo extends React.Component {
    constructor(props) {
        super(props);
        this.state = { iconIndex: 0, expanded: false };
        this.toggleIconIndex = this.toggleIconIndex.bind(this);
        this.toggleExpanded = this.toggleExpanded.bind(this);
    }
    toggleIconIndex() {
        const { iconIndex } = this.state;
        this.setState({ iconIndex: (iconIndex + 1) % icons.length });
    }
    toggleExpanded() {
        const { expanded } = this.state;
        this.setState({ expanded: !expanded });
    }
    render() {
        const { iconIndex, expanded } = this.state;
        return (React.createElement(demo_root_1.DemoRoot, null,
            React.createElement(demo_1.DemoThemeProviderWithToggle, null,
                React.createElement(demo_1.DemoThemeProviderToggleContext.Consumer, null, value => (React.createElement(React.Fragment, null,
                    React.createElement("h2", null, "Next Best Action Button"),
                    React.createElement("p", null, "Please note: the keys used in this demo cause a re-render of the button right when you change the text direction. You probably don't want to do that in your application."),
                    React.createElement(text_1.Text, { appearance: text_1.TextAppearance.headline250, bold: true }, "Basic Next Best Action Button"),
                    React.createElement(demo_1.DemoContainer, null,
                        React.createElement(NBAWrapper, null,
                            React.createElement(index_1.NextBestActionButton, { action: {
                                    content: 'Next Best Action',
                                    icon: React.createElement(icons_core_1.AirConditioning, null),
                                    onClick: () => console.log('Next Best Action')
                                }, key: `button-1-${value.direction}` }))),
                    React.createElement(text_1.Text, { appearance: text_1.TextAppearance.headline250, bold: true }, "Next Best Action Button with changing icons"),
                    React.createElement("button", { onClick: this.toggleIconIndex }, "change icon"),
                    React.createElement(demo_1.DemoContainer, null,
                        React.createElement(NBAWrapper, null,
                            React.createElement(index_1.NextBestActionButton, { action: {
                                    content: 'Next Best Action',
                                    icon: icons[iconIndex],
                                    onClick: () => console.log('Next Best Action')
                                }, key: `button-2-${value.direction}` }))),
                    React.createElement(text_1.Text, { appearance: text_1.TextAppearance.headline250, bold: true }, "Next Best Action Button with expanding text"),
                    React.createElement("button", { onClick: this.toggleExpanded }, "expand"),
                    React.createElement(demo_1.DemoContainer, null,
                        React.createElement(NBAWrapper, null,
                            React.createElement(index_1.NextBestActionButton, { action: {
                                    content: 'Next Best Action',
                                    icon: React.createElement(icons_core_1.AirConditioning, null),
                                    onClick: () => console.log('Next Best Action')
                                }, key: `button-3-${value.direction}`, expandContent: expanded })))))))));
    }
}
exports.default = NextBestActionButtonDemo;
