"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const React = __importStar(require("react"));
const theme_provider_1 = require("../../theme-provider");
const demo_root_1 = require("../demo-root");
const _1 = require("./");
// @todo move to demo components
const StyledDemoElementContainer = theme_provider_1.styled.div.withConfig({ displayName: "StyledDemoElementContainer", componentId: "sc-1j2luhr" }) `
	min-height: 40px;
	line-height: 40px;
	padding: 0 15px;
	color: ${props => props.theme.text.color.primary};
	background: ${props => props.theme.container.background.primary};
	border: 1px solid ${props => props.theme.separatorColor};
	font-family: ${props => props.theme.textAppearances.copy200.fontFamily};
`;
const DemoThemeToggleDemo = () => (React.createElement(demo_root_1.DemoRoot, null,
    React.createElement("h2", null, "Demo Theme Provider With Toggle"),
    React.createElement("p", null, "Please note: this pattern is a helper that can be used in the demos of other patterns to allow toggling the theme from within the demo."),
    React.createElement("hr", null),
    React.createElement(_1.DemoThemeProviderWithToggle, null,
        React.createElement(StyledDemoElementContainer, null, "Lorem ipsum dolor sit amet."))));
exports.default = DemoThemeToggleDemo;
