"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const React = __importStar(require("react"));
const demo_container_1 = require("../demo/demo-container");
const demo_root_1 = require("../demo/demo-root");
const demo_theme_provider_with_toggle_1 = require("../demo/demo-theme-provider-with-toggle");
const index_1 = require("./index");
const index_2 = require("../checkbox/index");
const index_3 = require("../radio-button/index");
class FieldsetWithErrors extends React.Component {
    constructor() {
        super(...arguments);
        this.state = {
            invalid: false
        };
        this.handleClick = () => {
            this.setState({ invalid: true });
        };
    }
    render() {
        return (React.createElement(index_1.Fieldset, { legend: "Sample Legend", required: true, errorText: "You need to select one option", appearance: this.state.invalid
                ? index_1.FieldsetAppearance.Error
                : index_1.FieldsetAppearance.Default },
            React.createElement(index_3.RadioButton, { name: "demo4", value: "c1", label: "Will raise an error", onClick: this.handleClick }),
            React.createElement(index_3.RadioButton, { name: "demo4", value: "c2", label: "Option two" })));
    }
}
const FieldsetDemo = () => (React.createElement(demo_root_1.DemoRoot, null,
    React.createElement("h2", null, "Fieldset"),
    React.createElement(demo_theme_provider_with_toggle_1.DemoThemeProviderWithToggle, null,
        React.createElement("h4", null, "Fieldset with Legend and Checkboxes"),
        React.createElement(demo_container_1.DemoContainer, null,
            React.createElement(index_1.Fieldset, { legend: "Please select some numbers" },
                React.createElement(index_2.Checkbox, { name: "demo1", value: "c1", label: "One" }),
                React.createElement(index_2.Checkbox, { name: "demo1", value: "c2", label: "Two" }))),
        React.createElement("h4", null, "Fieldset with Legend and Radiobuttons"),
        React.createElement(demo_container_1.DemoContainer, null,
            React.createElement(index_1.Fieldset, { legend: "Please select one number" },
                React.createElement(index_3.RadioButton, { name: "demo2", value: "c1", label: "One" }),
                React.createElement(index_3.RadioButton, { name: "demo2", value: "c2", label: "Two" }))),
        React.createElement("h4", null, "Fieldset with Legend, required and Radiobuttons"),
        React.createElement(demo_container_1.DemoContainer, null,
            React.createElement(index_1.Fieldset, { legend: "Please select one number", required: true },
                React.createElement(index_3.RadioButton, { name: "demo3", value: "c1", label: "One" }),
                React.createElement(index_3.RadioButton, { name: "demo3", value: "c2", label: "Two" }))),
        React.createElement("h4", null, "Fieldset with Legend, required and error state"),
        React.createElement(demo_container_1.DemoContainer, null,
            React.createElement(FieldsetWithErrors, null)))));
exports.default = FieldsetDemo;
