"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const React = __importStar(require("react"));
const react_screenshot_test_1 = require("react-screenshot-test");
const demo_1 = require("../../demo");
const theme_provider_1 = require("../../theme-provider");
const index_1 = require("../index");
const demo_2 = require("../demo");
const helpers_1 = require("../../helpers");
const breakpoint_wrapper_1 = require("../../breakpoint-wrapper");
react_screenshot_test_1.ReactScreenshotTest.create('Button')
    .viewport('Desktop', {
    width: 1024,
    height: 768
})
    .viewport('Mobile', {
    width: 560,
    height: 812,
    isMobile: true,
    hasTouch: true
})
    .shoot('Single child', React.createElement(demo_1.DemoRoot, null,
    React.createElement(theme_provider_1.ThemeProvider, null,
        React.createElement(demo_1.DemoContainer, null,
            React.createElement(index_1.Container, null,
                React.createElement(demo_2.DemoContent, { key: "first_div" }, "First div"))))))
    .shoot('Multiple children', React.createElement(demo_1.DemoRoot, null,
    React.createElement(theme_provider_1.ThemeProvider, null,
        React.createElement(demo_1.DemoContainer, null,
            React.createElement(index_1.Container, null, demo_2.demoContent)))))
    .shoot('With Gutter', React.createElement(demo_1.DemoRoot, null,
    React.createElement(theme_provider_1.ThemeProvider, null,
        React.createElement(demo_1.DemoContainer, null,
            React.createElement(index_1.Container, { gutter: index_1.ContainerGutter.static100 }, demo_2.demoContent)))))
    .shoot('With Gutter breakpoint configuration', React.createElement(demo_1.DemoRoot, null,
    React.createElement(theme_provider_1.ThemeProvider, null,
        React.createElement(demo_1.DemoContainer, null,
            React.createElement(index_1.Container, { gutter: {
                    [helpers_1.Breakpoints.default]: index_1.ContainerGutter.static100,
                    [helpers_1.Breakpoints.tablet]: index_1.ContainerGutter.static200,
                    [helpers_1.Breakpoints.desktop]: index_1.ContainerGutter.static300
                } }, demo_2.demoContent)))))
    .shoot('Wrap never', React.createElement(demo_1.DemoRoot, null,
    React.createElement(theme_provider_1.ThemeProvider, null,
        React.createElement(demo_1.DemoContainer, null,
            React.createElement(index_1.Container, { gutter: index_1.ContainerGutter.static100, wrap: index_1.ContainerWrap.never }, demo_2.demoContent)))))
    .shoot('Wrap always', React.createElement(demo_1.DemoRoot, null,
    React.createElement(theme_provider_1.ThemeProvider, null,
        React.createElement(demo_1.DemoContainer, null,
            React.createElement(index_1.Container, { gutter: index_1.ContainerGutter.static100, wrap: index_1.ContainerWrap.always }, demo_2.demoContent)))))
    .shoot('Wrap as breakpoint configuration', React.createElement(demo_1.DemoRoot, null,
    React.createElement(theme_provider_1.ThemeProvider, null,
        React.createElement(demo_1.DemoContainer, null,
            React.createElement(index_1.Container, { gutter: index_1.ContainerGutter.static100, wrap: {
                    [helpers_1.Breakpoints.default]: index_1.ContainerWrap.always,
                    [helpers_1.Breakpoints.b960]: index_1.ContainerWrap.never
                } }, demo_2.demoContent)))))
    .shoot('Stretch content', React.createElement(demo_1.DemoRoot, null,
    React.createElement(theme_provider_1.ThemeProvider, null,
        React.createElement(demo_1.DemoContainer, null,
            React.createElement(index_1.Container, { stretchContent: true }, demo_2.demoContent)))))
    .shoot('With padding', React.createElement(demo_1.DemoRoot, null,
    React.createElement(theme_provider_1.ThemeProvider, null,
        React.createElement(demo_1.DemoContainer, null,
            React.createElement(index_1.Container, { gutter: index_1.ContainerGutter.static100, padding: index_1.ContainerPadding.static100 }, demo_2.demoContent)))))
    .shoot('With different padding for all sides and based on breakpoints', React.createElement(demo_1.DemoRoot, null,
    React.createElement(theme_provider_1.ThemeProvider, null,
        React.createElement(demo_1.DemoContainer, null,
            React.createElement(index_1.Container, { gutter: index_1.ContainerGutter.static100, padding: {
                    top: index_1.ContainerPadding.static100,
                    left: {
                        [helpers_1.Breakpoints.b960]: index_1.ContainerPadding.grid001,
                        [helpers_1.Breakpoints.b1280]: index_1.ContainerPadding.grid002
                    }
                } }, demo_2.demoContent)))))
    .shoot('children vertically centered', React.createElement(demo_1.DemoRoot, null,
    React.createElement(theme_provider_1.ThemeProvider, null,
        React.createElement(demo_1.DemoContainer, null,
            React.createElement(index_1.Container, { gutter: index_1.ContainerGutter.static100, verticalAlign: index_1.ContainerVerticalAlignment.center },
                React.createElement(demo_2.DemoContent, null, "small content"),
                React.createElement(demo_2.LargeDemoContent, null, "large content"))))))
    .shoot('children aligned to the bottom', React.createElement(demo_1.DemoRoot, null,
    React.createElement(theme_provider_1.ThemeProvider, null,
        React.createElement(demo_1.DemoContainer, null,
            React.createElement(index_1.Container, { gutter: index_1.ContainerGutter.static100, verticalAlign: index_1.ContainerVerticalAlignment.flexEnd },
                React.createElement(demo_2.DemoContent, null, "small content"),
                React.createElement(demo_2.LargeDemoContent, null, "large content"))))))
    .shoot('children horizontally centered', React.createElement(demo_1.DemoRoot, null,
    React.createElement(theme_provider_1.ThemeProvider, null,
        React.createElement(demo_1.DemoContainer, null,
            React.createElement(index_1.Container, { gutter: index_1.ContainerGutter.static100, horizontalAlign: index_1.ContainerHorizontalAlignment.center },
                React.createElement(demo_2.DemoContent, null, "small content"))))))
    .shoot('children aligned to the right', React.createElement(demo_1.DemoRoot, null,
    React.createElement(theme_provider_1.ThemeProvider, null,
        React.createElement(demo_1.DemoContainer, null,
            React.createElement(index_1.Container, { gutter: index_1.ContainerGutter.static100, horizontalAlign: index_1.ContainerHorizontalAlignment.flexEnd },
                React.createElement(demo_2.DemoContent, null, "small content"))))))
    .shoot('children aligned differently on various breakpoints', React.createElement(demo_1.DemoRoot, null,
    React.createElement(theme_provider_1.ThemeProvider, null,
        React.createElement(demo_1.DemoContainer, null,
            React.createElement(index_1.Container, { gutter: index_1.ContainerGutter.static100, horizontalAlign: {
                    [helpers_1.Breakpoints.default]: index_1.ContainerHorizontalAlignment.flexStart,
                    [helpers_1.Breakpoints.b560]: index_1.ContainerHorizontalAlignment.flexEnd,
                    [helpers_1.Breakpoints.b960]: index_1.ContainerHorizontalAlignment.flexStart,
                    [helpers_1.Breakpoints.b1280]: index_1.ContainerHorizontalAlignment.center
                } },
                React.createElement(demo_2.DemoContent, null, "small content"))))))
    .shoot('Separators between children', React.createElement(demo_1.DemoRoot, null,
    React.createElement(theme_provider_1.ThemeProvider, null,
        React.createElement(demo_1.DemoContainer, null,
            React.createElement(index_1.Container, { gutter: index_1.ContainerGutter.static100, wrap: index_1.ContainerWrap.always }, demo_2.demoContentWithSeparators)))))
    .shoot('With children that render `null`', React.createElement(demo_1.DemoRoot, null,
    React.createElement(theme_provider_1.ThemeProvider, null,
        React.createElement(demo_1.DemoContainer, null,
            React.createElement(index_1.Container, { gutter: index_1.ContainerGutter.static300 },
                React.createElement(breakpoint_wrapper_1.BreakpointWrapper, { max: helpers_1.Breakpoints.b960 },
                    React.createElement(demo_2.DemoContent, null, "I'm only visible below 960px, so there is no gutter for me in larger breakpoints")),
                demo_2.demoContent)))))
    .run();
