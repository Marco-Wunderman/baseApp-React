"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const React = __importStar(require("react"));
const demo_container_1 = require("../demo/demo-container");
const demo_root_1 = require("../demo/demo-root");
const demo_theme_provider_with_toggle_1 = require("../demo/demo-theme-provider-with-toggle");
const index_1 = require("./index");
const label = 'Lorem ipsum dolor sit amet?';
class RadioButtonDemo extends React.Component {
    constructor(props) {
        super(props);
        this.handleClick = (event) => {
            console.log('click', event.currentTarget.nodeName);
        };
        this.handleControlledClick = (event, value) => {
            this.setState({
                controlledDemoValue: value
            });
            console.log('click', event.currentTarget.nodeName);
        };
        this.state = {
            controlledDemoValue: 'c1'
        };
    }
    render() {
        return (React.createElement(demo_root_1.DemoRoot, null,
            React.createElement("h2", null, "Radio Button"),
            React.createElement(demo_theme_provider_with_toggle_1.DemoThemeProviderWithToggle, null,
                React.createElement("h4", null, "default"),
                React.createElement(demo_container_1.DemoContainer, null,
                    React.createElement(index_1.RadioButton, { value: "1", label: label, onClick: this.handleClick })),
                React.createElement("h4", null, "checked"),
                React.createElement(demo_container_1.DemoContainer, null,
                    React.createElement(index_1.RadioButton, { value: "2", label: label, onClick: this.handleClick, checked: true })),
                React.createElement("h4", null, "disabled"),
                React.createElement(demo_container_1.DemoContainer, null,
                    React.createElement(index_1.RadioButton, { name: "disabled", value: "d1", label: label, onClick: this.handleClick, disabled: true })),
                React.createElement("h4", null, "disabled and checked"),
                React.createElement(demo_container_1.DemoContainer, null,
                    React.createElement(index_1.RadioButton, { value: "dc1", label: label, onClick: this.handleClick, checked: true, disabled: true })),
                React.createElement("h4", null, "Controlled component"),
                React.createElement(demo_container_1.DemoContainer, null,
                    React.createElement(index_1.RadioButton, { value: "c1", label: label, onClick: event => this.handleControlledClick(event, 'c1'), checked: this.state.controlledDemoValue === 'c1' }),
                    React.createElement(index_1.RadioButton, { value: "c2", label: label, onClick: event => this.handleControlledClick(event, 'c2'), checked: this.state.controlledDemoValue === 'c2' })),
                React.createElement("h4", null, "Radio group"),
                React.createElement(demo_container_1.DemoContainer, null,
                    React.createElement(index_1.RadioButton, { value: "c1", label: label, onClick: this.handleClick, name: "arbitraryName" }),
                    React.createElement(index_1.RadioButton, { value: "c2", label: label, onClick: this.handleClick, name: "arbitraryName" })),
                React.createElement("h4", null, "Radio without text label"),
                React.createElement(demo_container_1.DemoContainer, null,
                    React.createElement(index_1.RadioButton, { value: "e1", onClick: this.handleClick })))));
    }
}
exports.default = RadioButtonDemo;
