import * as React from 'react';
export declare type HandleRadioButtonEvent = (e: React.SyntheticEvent<HTMLElement>, props: RadioButtonProps) => void;
export interface RadioButtonProps {
    readonly checked?: boolean;
    readonly disabled?: boolean;
    readonly onBlur?: HandleRadioButtonEvent;
    readonly onChange?: HandleRadioButtonEvent;
    readonly onClick?: HandleRadioButtonEvent;
    readonly onFocus?: HandleRadioButtonEvent;
    readonly id?: string;
    readonly name?: string;
    readonly value: string;
    readonly label?: string | JSX.Element;
}
export declare class RadioButton extends React.Component<RadioButtonProps> {
    protected readonly handleChange: (e: React.SyntheticEvent<HTMLElement, Event>) => void;
    protected readonly handleBlur: (e: React.SyntheticEvent<HTMLElement, Event>) => void;
    protected readonly handleFocus: (e: React.SyntheticEvent<HTMLElement, Event>) => void;
    protected readonly handleClick: (e: React.SyntheticEvent<HTMLElement, Event>) => void;
    render(): JSX.Element;
}
