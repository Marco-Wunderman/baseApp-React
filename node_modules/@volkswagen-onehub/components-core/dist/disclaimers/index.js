"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const React = __importStar(require("react"));
const text_1 = require("../text");
const theme_provider_1 = require("../theme-provider");
const StyledDL = theme_provider_1.styled.dl.withConfig({ displayName: "StyledDL", componentId: "sc-190wmkf" }) `
	display: grid;
	grid-template-columns: ${props => props.theme.size.dynamic0100} auto;
	grid-column-gap: ${props => props.theme.size.static150};
	grid-row-gap: ${props => props.theme.size.static200};
	margin: 0;
	padding: 0;
`;
const StyledDD = theme_provider_1.styled.dd.withConfig({ displayName: "StyledDD", componentId: "sc-51uwu8" }) `
	margin: 0;
	padding: 0;
`;
const StyledDT = theme_provider_1.styled.dt.withConfig({ displayName: "StyledDT", componentId: "sc-1sgse3z" }) `
	margin: 0;
	padding: 0;
`;
const StyledUL = theme_provider_1.styled.ul.withConfig({ displayName: "StyledUL", componentId: "sc-4ogw38" }) `
	display: grid;
	grid-row-gap: ${props => props.theme.size.static200};
	list-style: none;
	margin: 0;
	padding: 0;
`;
const StyledLI = theme_provider_1.styled.li.withConfig({ displayName: "StyledLI", componentId: "sc-1v4om6p" }) `
	margin: 0;
	padding: 0;
`;
const hasReferences = (disclaimers) => Boolean(disclaimers.find(disclaimer => Boolean(disclaimer.reference)));
function Disclaimers(props) {
    const { disclaimers } = props;
    return (React.createElement(text_1.Text, { appearance: text_1.TextAppearance.copy0200, color: text_1.TextColor.secondary }, hasReferences(disclaimers) ? (React.createElement(StyledDL, null, disclaimers.map(disclaimer => (React.createElement(React.Fragment, null,
        React.createElement(StyledDT, null, disclaimer.reference),
        React.createElement(StyledDD, null, disclaimer.text)))))) : (React.createElement(StyledUL, null, disclaimers.map(disclaimer => (React.createElement(StyledLI, { key: disclaimer.key }, disclaimer.text)))))));
}
exports.Disclaimers = Disclaimers;
